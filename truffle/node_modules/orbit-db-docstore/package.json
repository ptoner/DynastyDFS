{
  "_args": [
    [
      "orbit-db-docstore@github:orbitdb/orbit-db-docstore",
      "/home/ptoner/repos/fantasybaseballleague/truffle/node_modules/orbit-db"
    ]
  ],
  "_from": "orbitdb/orbit-db-docstore",
  "_id": "orbit-db-docstore@1.4.3",
  "_inCache": true,
  "_installable": true,
  "_location": "/orbit-db-docstore",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/orbitdb/orbit-db-docstore/master/package.json",
      "gitUrl": "git://github.com/orbitdb/orbit-db-docstore.git",
      "httpsUrl": "git+https://github.com/orbitdb/orbit-db-docstore.git",
      "shortcut": "github:orbitdb/orbit-db-docstore",
      "ssh": "git@github.com:orbitdb/orbit-db-docstore.git",
      "sshUrl": "git+ssh://git@github.com/orbitdb/orbit-db-docstore.git",
      "type": "github"
    },
    "name": "orbit-db-docstore",
    "raw": "orbit-db-docstore@github:orbitdb/orbit-db-docstore",
    "rawSpec": "github:orbitdb/orbit-db-docstore",
    "scope": null,
    "spec": "github:orbitdb/orbit-db-docstore",
    "type": "hosted"
  },
  "_requiredBy": [
    "/orbit-db"
  ],
  "_resolved": "git://github.com/orbitdb/orbit-db-docstore.git#d35d71ec20193cb6f9ef6306d6b8661e26857bc3",
  "_shasum": "0f91efb36ea3f173abc629cfb5d1260cf28ecdc4",
  "_shrinkwrap": null,
  "_spec": "orbit-db-docstore@github:orbitdb/orbit-db-docstore",
  "_where": "/home/ptoner/repos/fantasybaseballleague/truffle/node_modules/orbit-db",
  "author": {
    "name": "shamb0t"
  },
  "bugs": {
    "url": "https://github.com/orbitdb/orbit-db-docstore/issues"
  },
  "dependencies": {
    "orbit-db-store": "github:orbitdb/orbit-db-store",
    "p-map": "~1.1.1"
  },
  "description": "Document Store for orbit-db",
  "devDependencies": {},
  "gitHead": "d35d71ec20193cb6f9ef6306d6b8661e26857bc3",
  "homepage": "https://github.com/orbitdb/orbit-db-docstore#readme",
  "keywords": [
    "docstore",
    "orbit-db",
    "orbitdb"
  ],
  "license": "MIT",
  "main": "src/DocumentStore.js",
  "name": "orbit-db-docstore",
  "optionalDependencies": {},
  "readme": "# orbit-db-docstore\n\n[![npm](https://img.shields.io/npm/v/orbit-db-docstore.svg)](https://www.npmjs.com/package/orbit-db-docstore)\n[![Gitter](https://img.shields.io/gitter/room/nwjs/nw.js.svg)](https://gitter.im/orbitdb/Lobby)\n\n> Document Store for orbit-db\n\nDatabase for storing indexed documents. Stores documents by `_id` field by default but you can also specify a custom field to index by.\n\n*This is a core data store in [orbit-db](https://github.com/haadcode/orbit-db)*\n\n## Table of Contents\n\n\t- [Install](#install)\n\t- [Usage](#usage)\n\t- [API](#api)\n\t\t- [docstore(name, options)](#docstorename-options)\n\t- [License](#license)\n\n## Install\n\nThis project uses [npm](https://npmjs.com) and [nodejs](https://nodejs.org)\n\n```\nnpm install orbit-db-docstore\n```\n\n## Usage\n\n```javascript\nconst IPFS = require('ipfs')\nconst OrbitDB = require('orbit-db')\n\nconst ipfs = new IPFS()\nconst orbitdb = new OrbitDB(ipfs)\nconst docstore = orbitdb.docstore('db name')\n\ndocstore.put({ _id: 'hello world', doc: 'all the things' })\n  .then(() => docstore.put({ _id: 'sup world', doc: 'other things' }))\n  .then(() => docstore.get('hello'))\n  .then((value) => console.log(value))\n  // [{ _id: 'hello world', doc: 'all the things'}]\n\n```\n\nYou can specify the field to index by in the options:\n\n```javascript\nconst docstore = orbitdb.docstore('db name', { indexBy: 'doc' })\n\ndocstore.put({ _id: 'hello world', doc: 'some things' })\n  .then(() => docstore.put({ _id: 'hello universe', doc: 'all the things' }))\n  .then(() => docstore.get('all'))\n  .then((value) => console.log(value))\n  // [{ _id: 'hello universe', doc: 'all the things'}]\n\n```\n\nYou can also use a mapper to query the documents\n\n```javascript\nconst docstore = orbitdb.docstore('db name')\n\ndocstore.put({ _id: 'hello world', doc: 'some things', views: 10 })\n  .then(() => docstore.put({ _id: 'hello universe', doc: 'all the things', views: 100 }))\n  .then(() => docstore.put({ _id: 'sup world', doc: 'other things', views: 5 }))\n  .then(() => docstore.query((e)=> e.views > 5))\n  .then((value) => console.log(value))\n  // [{ _id: 'hello world', doc: 'some things', views: 10}, { _id: 'hello universe', doc: 'all the things', views: 100}]\n```\n\n## API\n\n*See [orbit-db API documentation](https://github.com/haadcode/orbit-db/blob/master/API.md) for full details*\n\n### docstore(name, options)\n\n  Package:\n  [orbit-db-docstore](https://github.com/shamb0t/orbit-db-docstore)\n\n  ```javascript\n  const db = orbitdb.docstore('orbit.users.shamb0t.profile')\n  ```\n\n  By default, documents are indexed by field '_id'. You can also specify the field to index by:\n\n  ```javascript\n  const db = orbitdb.docstore('orbit.users.shamb0t.profile', { indexBy: 'name' })\n  ```\n\n  - **put(doc)**\n    ```javascript\n    db.put({ _id: 'QmAwesomeIpfsHash', name: 'shamb0t', followers: 500 }).then((hash) => ...)\n    ```\n\n  - **get(key)**\n    ```javascript\n    const profile = db.get('shamb0t')\n      .map((e) => e.payload.value)\n    // [{ _id: 'shamb0t', name: 'shamb0t', followers: 500 }]\n    ```\n\n  - **query(mapper)**\n    ```javascript\n    const all = db.query((doc) => doc.followers >= 500)\n    // [{ _id: 'shamb0t', name: 'shamb0t', followers: 500 }]\n    ```\n\n  - **del(key)**\n    ```javascript\n    db.del('shamb0t').then((removed) => ...)\n    ```\n\n  - **events**\n\n    ```javascript\n    db.events.on('data', (dbname, event) => ... )\n    ```\n\n    See [events](https://github.com/haadcode/orbit-db/blob/master/API.md#events) for full description.\n\n## Contributing\n\nIf you think this could be better, please [open an issue](https://github.com/orbitdb/orbit-db-docstore/issues/new)!\n\nPlease note that all interactions in @orbitdb fall under our [Code of Conduct](CODE_OF_CONDUCT.md).\n\n## License\n\n[MIT](LICENSE) ©️ 2015-2018 shamb0t, Haja Networks Oy\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/orbitdb/orbit-db-docstore.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "1.4.3"
}
