/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var proto_loom_pb = require('../proto/loom_pb.js');
goog.exportSymbol('proto.CandidateListV2', null, global);
goog.exportSymbol('proto.CandidateV2', null, global);
goog.exportSymbol('proto.ChangeCandidateFeeRequest', null, global);
goog.exportSymbol('proto.CheckAllDelegationsRequest', null, global);
goog.exportSymbol('proto.CheckAllDelegationsResponse', null, global);
goog.exportSymbol('proto.CheckDelegationRequestV2', null, global);
goog.exportSymbol('proto.CheckDelegationResponseV2', null, global);
goog.exportSymbol('proto.CheckDistributionRequest', null, global);
goog.exportSymbol('proto.CheckDistributionResponse', null, global);
goog.exportSymbol('proto.ClaimDistributionRequestV2', null, global);
goog.exportSymbol('proto.ClaimDistributionResponseV2', null, global);
goog.exportSymbol('proto.DPOSInitRequestV2', null, global);
goog.exportSymbol('proto.DelegateRequestV2', null, global);
goog.exportSymbol('proto.DelegationListV2', null, global);
goog.exportSymbol('proto.DelegationV2', null, global);
goog.exportSymbol('proto.DelegationV2.DelegationState', null, global);
goog.exportSymbol('proto.DelegationV2.LocktimeTier', null, global);
goog.exportSymbol('proto.DistributionListV2', null, global);
goog.exportSymbol('proto.DistributionV2', null, global);
goog.exportSymbol('proto.ElectDelegationRequestV2', null, global);
goog.exportSymbol('proto.ListAllDelegationsRequest', null, global);
goog.exportSymbol('proto.ListAllDelegationsResponse', null, global);
goog.exportSymbol('proto.ListCandidateRequestV2', null, global);
goog.exportSymbol('proto.ListCandidateResponseV2', null, global);
goog.exportSymbol('proto.ListDelegationsRequest', null, global);
goog.exportSymbol('proto.ListDelegationsResponse', null, global);
goog.exportSymbol('proto.ListValidatorsRequestV2', null, global);
goog.exportSymbol('proto.ListValidatorsResponseV2', null, global);
goog.exportSymbol('proto.ParamsV2', null, global);
goog.exportSymbol('proto.RedelegateRequestV2', null, global);
goog.exportSymbol('proto.RegisterCandidateRequestV2', null, global);
goog.exportSymbol('proto.RemoveWhitelistedCandidateRequestV2', null, global);
goog.exportSymbol('proto.SetElectionCycleRequestV2', null, global);
goog.exportSymbol('proto.SetMaxYearlyRewardRequestV2', null, global);
goog.exportSymbol('proto.SetOracleAddressRequestV2', null, global);
goog.exportSymbol('proto.SetRegistrationRequirementRequestV2', null, global);
goog.exportSymbol('proto.SetSlashingPercentagesRequestV2', null, global);
goog.exportSymbol('proto.SetValidatorCountRequestV2', null, global);
goog.exportSymbol('proto.StateV2', null, global);
goog.exportSymbol('proto.TimeUntilElectionRequest', null, global);
goog.exportSymbol('proto.TimeUntilElectionResponse', null, global);
goog.exportSymbol('proto.TotalDelegationRequest', null, global);
goog.exportSymbol('proto.TotalDelegationResponse', null, global);
goog.exportSymbol('proto.UnbondRequestV2', null, global);
goog.exportSymbol('proto.UnregisterCandidateRequestV2', null, global);
goog.exportSymbol('proto.Validator', null, global);
goog.exportSymbol('proto.ValidatorStatisticListV2', null, global);
goog.exportSymbol('proto.ValidatorStatisticV2', null, global);
goog.exportSymbol('proto.WhitelistCandidateRequestV2', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Validator = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Validator, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Validator.displayName = 'proto.Validator';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Validator.prototype.toObject = function(opt_includeInstance) {
  return proto.Validator.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Validator} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Validator.toObject = function(includeInstance, msg) {
  var f, obj = {
    pubKey: msg.getPubKey_asB64(),
    power: jspb.Message.getFieldWithDefault(msg, 2, "0")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Validator}
 */
proto.Validator.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Validator;
  return proto.Validator.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Validator} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Validator}
 */
proto.Validator.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPubKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setPower(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Validator.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Validator.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Validator} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Validator.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPubKey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getPower();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      2,
      f
    );
  }
};


/**
 * optional bytes pub_key = 1;
 * @return {!(string|Uint8Array)}
 */
proto.Validator.prototype.getPubKey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes pub_key = 1;
 * This is a type-conversion wrapper around `getPubKey()`
 * @return {string}
 */
proto.Validator.prototype.getPubKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPubKey()));
};


/**
 * optional bytes pub_key = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPubKey()`
 * @return {!Uint8Array}
 */
proto.Validator.prototype.getPubKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPubKey()));
};


/** @param {!(string|Uint8Array)} value */
proto.Validator.prototype.setPubKey = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional int64 power = 2;
 * @return {string}
 */
proto.Validator.prototype.getPower = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "0"));
};


/** @param {string} value */
proto.Validator.prototype.setPower = function(value) {
  jspb.Message.setProto3StringIntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ParamsV2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ParamsV2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ParamsV2.displayName = 'proto.ParamsV2';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ParamsV2.prototype.toObject = function(opt_includeInstance) {
  return proto.ParamsV2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ParamsV2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParamsV2.toObject = function(includeInstance, msg) {
  var f, obj = {
    validatorCount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    electionCycleLength: jspb.Message.getFieldWithDefault(msg, 2, 0),
    coinContractAddress: (f = msg.getCoinContractAddress()) && proto_loom_pb.Address.toObject(includeInstance, f),
    oracleAddress: (f = msg.getOracleAddress()) && proto_loom_pb.Address.toObject(includeInstance, f),
    maxYearlyReward: (f = msg.getMaxYearlyReward()) && proto_loom_pb.BigUInt.toObject(includeInstance, f),
    registrationRequirement: (f = msg.getRegistrationRequirement()) && proto_loom_pb.BigUInt.toObject(includeInstance, f),
    crashSlashingPercentage: (f = msg.getCrashSlashingPercentage()) && proto_loom_pb.BigUInt.toObject(includeInstance, f),
    byzantineSlashingPercentage: (f = msg.getByzantineSlashingPercentage()) && proto_loom_pb.BigUInt.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ParamsV2}
 */
proto.ParamsV2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ParamsV2;
  return proto.ParamsV2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ParamsV2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ParamsV2}
 */
proto.ParamsV2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setValidatorCount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setElectionCycleLength(value);
      break;
    case 3:
      var value = new proto_loom_pb.Address;
      reader.readMessage(value,proto_loom_pb.Address.deserializeBinaryFromReader);
      msg.setCoinContractAddress(value);
      break;
    case 4:
      var value = new proto_loom_pb.Address;
      reader.readMessage(value,proto_loom_pb.Address.deserializeBinaryFromReader);
      msg.setOracleAddress(value);
      break;
    case 5:
      var value = new proto_loom_pb.BigUInt;
      reader.readMessage(value,proto_loom_pb.BigUInt.deserializeBinaryFromReader);
      msg.setMaxYearlyReward(value);
      break;
    case 6:
      var value = new proto_loom_pb.BigUInt;
      reader.readMessage(value,proto_loom_pb.BigUInt.deserializeBinaryFromReader);
      msg.setRegistrationRequirement(value);
      break;
    case 7:
      var value = new proto_loom_pb.BigUInt;
      reader.readMessage(value,proto_loom_pb.BigUInt.deserializeBinaryFromReader);
      msg.setCrashSlashingPercentage(value);
      break;
    case 8:
      var value = new proto_loom_pb.BigUInt;
      reader.readMessage(value,proto_loom_pb.BigUInt.deserializeBinaryFromReader);
      msg.setByzantineSlashingPercentage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ParamsV2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ParamsV2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ParamsV2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ParamsV2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValidatorCount();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getElectionCycleLength();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getCoinContractAddress();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto_loom_pb.Address.serializeBinaryToWriter
    );
  }
  f = message.getOracleAddress();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto_loom_pb.Address.serializeBinaryToWriter
    );
  }
  f = message.getMaxYearlyReward();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto_loom_pb.BigUInt.serializeBinaryToWriter
    );
  }
  f = message.getRegistrationRequirement();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto_loom_pb.BigUInt.serializeBinaryToWriter
    );
  }
  f = message.getCrashSlashingPercentage();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto_loom_pb.BigUInt.serializeBinaryToWriter
    );
  }
  f = message.getByzantineSlashingPercentage();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto_loom_pb.BigUInt.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 validator_count = 1;
 * @return {number}
 */
proto.ParamsV2.prototype.getValidatorCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.ParamsV2.prototype.setValidatorCount = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 election_cycle_length = 2;
 * @return {number}
 */
proto.ParamsV2.prototype.getElectionCycleLength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.ParamsV2.prototype.setElectionCycleLength = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Address coin_contract_address = 3;
 * @return {?proto.Address}
 */
proto.ParamsV2.prototype.getCoinContractAddress = function() {
  return /** @type{?proto.Address} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.Address, 3));
};


/** @param {?proto.Address|undefined} value */
proto.ParamsV2.prototype.setCoinContractAddress = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.ParamsV2.prototype.clearCoinContractAddress = function() {
  this.setCoinContractAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ParamsV2.prototype.hasCoinContractAddress = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Address oracle_address = 4;
 * @return {?proto.Address}
 */
proto.ParamsV2.prototype.getOracleAddress = function() {
  return /** @type{?proto.Address} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.Address, 4));
};


/** @param {?proto.Address|undefined} value */
proto.ParamsV2.prototype.setOracleAddress = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.ParamsV2.prototype.clearOracleAddress = function() {
  this.setOracleAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ParamsV2.prototype.hasOracleAddress = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional BigUInt max_yearly_reward = 5;
 * @return {?proto.BigUInt}
 */
proto.ParamsV2.prototype.getMaxYearlyReward = function() {
  return /** @type{?proto.BigUInt} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.BigUInt, 5));
};


/** @param {?proto.BigUInt|undefined} value */
proto.ParamsV2.prototype.setMaxYearlyReward = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.ParamsV2.prototype.clearMaxYearlyReward = function() {
  this.setMaxYearlyReward(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ParamsV2.prototype.hasMaxYearlyReward = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional BigUInt registration_requirement = 6;
 * @return {?proto.BigUInt}
 */
proto.ParamsV2.prototype.getRegistrationRequirement = function() {
  return /** @type{?proto.BigUInt} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.BigUInt, 6));
};


/** @param {?proto.BigUInt|undefined} value */
proto.ParamsV2.prototype.setRegistrationRequirement = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.ParamsV2.prototype.clearRegistrationRequirement = function() {
  this.setRegistrationRequirement(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ParamsV2.prototype.hasRegistrationRequirement = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional BigUInt crash_slashing_percentage = 7;
 * @return {?proto.BigUInt}
 */
proto.ParamsV2.prototype.getCrashSlashingPercentage = function() {
  return /** @type{?proto.BigUInt} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.BigUInt, 7));
};


/** @param {?proto.BigUInt|undefined} value */
proto.ParamsV2.prototype.setCrashSlashingPercentage = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.ParamsV2.prototype.clearCrashSlashingPercentage = function() {
  this.setCrashSlashingPercentage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ParamsV2.prototype.hasCrashSlashingPercentage = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional BigUInt byzantine_slashing_percentage = 8;
 * @return {?proto.BigUInt}
 */
proto.ParamsV2.prototype.getByzantineSlashingPercentage = function() {
  return /** @type{?proto.BigUInt} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.BigUInt, 8));
};


/** @param {?proto.BigUInt|undefined} value */
proto.ParamsV2.prototype.setByzantineSlashingPercentage = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.ParamsV2.prototype.clearByzantineSlashingPercentage = function() {
  this.setByzantineSlashingPercentage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ParamsV2.prototype.hasByzantineSlashingPercentage = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.StateV2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.StateV2.repeatedFields_, null);
};
goog.inherits(proto.StateV2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.StateV2.displayName = 'proto.StateV2';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.StateV2.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.StateV2.prototype.toObject = function(opt_includeInstance) {
  return proto.StateV2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.StateV2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.StateV2.toObject = function(includeInstance, msg) {
  var f, obj = {
    params: (f = msg.getParams()) && proto.ParamsV2.toObject(includeInstance, f),
    validatorsList: jspb.Message.toObjectList(msg.getValidatorsList(),
    proto.Validator.toObject, includeInstance),
    lastElectionTime: jspb.Message.getFieldWithDefault(msg, 3, "0"),
    totalValidatorDelegations: (f = msg.getTotalValidatorDelegations()) && proto_loom_pb.BigUInt.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.StateV2}
 */
proto.StateV2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.StateV2;
  return proto.StateV2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.StateV2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.StateV2}
 */
proto.StateV2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ParamsV2;
      reader.readMessage(value,proto.ParamsV2.deserializeBinaryFromReader);
      msg.setParams(value);
      break;
    case 2:
      var value = new proto.Validator;
      reader.readMessage(value,proto.Validator.deserializeBinaryFromReader);
      msg.addValidators(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setLastElectionTime(value);
      break;
    case 4:
      var value = new proto_loom_pb.BigUInt;
      reader.readMessage(value,proto_loom_pb.BigUInt.deserializeBinaryFromReader);
      msg.setTotalValidatorDelegations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.StateV2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.StateV2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.StateV2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.StateV2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParams();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ParamsV2.serializeBinaryToWriter
    );
  }
  f = message.getValidatorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Validator.serializeBinaryToWriter
    );
  }
  f = message.getLastElectionTime();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      3,
      f
    );
  }
  f = message.getTotalValidatorDelegations();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto_loom_pb.BigUInt.serializeBinaryToWriter
    );
  }
};


/**
 * optional ParamsV2 params = 1;
 * @return {?proto.ParamsV2}
 */
proto.StateV2.prototype.getParams = function() {
  return /** @type{?proto.ParamsV2} */ (
    jspb.Message.getWrapperField(this, proto.ParamsV2, 1));
};


/** @param {?proto.ParamsV2|undefined} value */
proto.StateV2.prototype.setParams = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.StateV2.prototype.clearParams = function() {
  this.setParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.StateV2.prototype.hasParams = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Validator validators = 2;
 * @return {!Array.<!proto.Validator>}
 */
proto.StateV2.prototype.getValidatorsList = function() {
  return /** @type{!Array.<!proto.Validator>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Validator, 2));
};


/** @param {!Array.<!proto.Validator>} value */
proto.StateV2.prototype.setValidatorsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Validator=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Validator}
 */
proto.StateV2.prototype.addValidators = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Validator, opt_index);
};


proto.StateV2.prototype.clearValidatorsList = function() {
  this.setValidatorsList([]);
};


/**
 * optional int64 last_election_time = 3;
 * @return {string}
 */
proto.StateV2.prototype.getLastElectionTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, "0"));
};


/** @param {string} value */
proto.StateV2.prototype.setLastElectionTime = function(value) {
  jspb.Message.setProto3StringIntField(this, 3, value);
};


/**
 * optional BigUInt total_validator_delegations = 4;
 * @return {?proto.BigUInt}
 */
proto.StateV2.prototype.getTotalValidatorDelegations = function() {
  return /** @type{?proto.BigUInt} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.BigUInt, 4));
};


/** @param {?proto.BigUInt|undefined} value */
proto.StateV2.prototype.setTotalValidatorDelegations = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.StateV2.prototype.clearTotalValidatorDelegations = function() {
  this.setTotalValidatorDelegations(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.StateV2.prototype.hasTotalValidatorDelegations = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ValidatorStatisticV2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ValidatorStatisticV2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ValidatorStatisticV2.displayName = 'proto.ValidatorStatisticV2';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ValidatorStatisticV2.prototype.toObject = function(opt_includeInstance) {
  return proto.ValidatorStatisticV2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ValidatorStatisticV2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ValidatorStatisticV2.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: (f = msg.getAddress()) && proto_loom_pb.Address.toObject(includeInstance, f),
    pubKey: msg.getPubKey_asB64(),
    upblockCount: jspb.Message.getFieldWithDefault(msg, 3, 0),
    blockCount: jspb.Message.getFieldWithDefault(msg, 4, 0),
    slashPercentage: (f = msg.getSlashPercentage()) && proto_loom_pb.BigUInt.toObject(includeInstance, f),
    distributionTotal: (f = msg.getDistributionTotal()) && proto_loom_pb.BigUInt.toObject(includeInstance, f),
    delegationTotal: (f = msg.getDelegationTotal()) && proto_loom_pb.BigUInt.toObject(includeInstance, f),
    whitelistAmount: (f = msg.getWhitelistAmount()) && proto_loom_pb.BigUInt.toObject(includeInstance, f),
    whitelistLocktime: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ValidatorStatisticV2}
 */
proto.ValidatorStatisticV2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ValidatorStatisticV2;
  return proto.ValidatorStatisticV2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ValidatorStatisticV2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ValidatorStatisticV2}
 */
proto.ValidatorStatisticV2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_loom_pb.Address;
      reader.readMessage(value,proto_loom_pb.Address.deserializeBinaryFromReader);
      msg.setAddress(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPubKey(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUpblockCount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBlockCount(value);
      break;
    case 5:
      var value = new proto_loom_pb.BigUInt;
      reader.readMessage(value,proto_loom_pb.BigUInt.deserializeBinaryFromReader);
      msg.setSlashPercentage(value);
      break;
    case 6:
      var value = new proto_loom_pb.BigUInt;
      reader.readMessage(value,proto_loom_pb.BigUInt.deserializeBinaryFromReader);
      msg.setDistributionTotal(value);
      break;
    case 7:
      var value = new proto_loom_pb.BigUInt;
      reader.readMessage(value,proto_loom_pb.BigUInt.deserializeBinaryFromReader);
      msg.setDelegationTotal(value);
      break;
    case 8:
      var value = new proto_loom_pb.BigUInt;
      reader.readMessage(value,proto_loom_pb.BigUInt.deserializeBinaryFromReader);
      msg.setWhitelistAmount(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setWhitelistLocktime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ValidatorStatisticV2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ValidatorStatisticV2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ValidatorStatisticV2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ValidatorStatisticV2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_loom_pb.Address.serializeBinaryToWriter
    );
  }
  f = message.getPubKey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getUpblockCount();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getBlockCount();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getSlashPercentage();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto_loom_pb.BigUInt.serializeBinaryToWriter
    );
  }
  f = message.getDistributionTotal();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto_loom_pb.BigUInt.serializeBinaryToWriter
    );
  }
  f = message.getDelegationTotal();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto_loom_pb.BigUInt.serializeBinaryToWriter
    );
  }
  f = message.getWhitelistAmount();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto_loom_pb.BigUInt.serializeBinaryToWriter
    );
  }
  f = message.getWhitelistLocktime();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
};


/**
 * optional Address address = 1;
 * @return {?proto.Address}
 */
proto.ValidatorStatisticV2.prototype.getAddress = function() {
  return /** @type{?proto.Address} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.Address, 1));
};


/** @param {?proto.Address|undefined} value */
proto.ValidatorStatisticV2.prototype.setAddress = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.ValidatorStatisticV2.prototype.clearAddress = function() {
  this.setAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ValidatorStatisticV2.prototype.hasAddress = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes pub_key = 2;
 * @return {!(string|Uint8Array)}
 */
proto.ValidatorStatisticV2.prototype.getPubKey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes pub_key = 2;
 * This is a type-conversion wrapper around `getPubKey()`
 * @return {string}
 */
proto.ValidatorStatisticV2.prototype.getPubKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPubKey()));
};


/**
 * optional bytes pub_key = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPubKey()`
 * @return {!Uint8Array}
 */
proto.ValidatorStatisticV2.prototype.getPubKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPubKey()));
};


/** @param {!(string|Uint8Array)} value */
proto.ValidatorStatisticV2.prototype.setPubKey = function(value) {
  jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional uint64 upblock_count = 3;
 * @return {number}
 */
proto.ValidatorStatisticV2.prototype.getUpblockCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.ValidatorStatisticV2.prototype.setUpblockCount = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 block_count = 4;
 * @return {number}
 */
proto.ValidatorStatisticV2.prototype.getBlockCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.ValidatorStatisticV2.prototype.setBlockCount = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional BigUInt slash_percentage = 5;
 * @return {?proto.BigUInt}
 */
proto.ValidatorStatisticV2.prototype.getSlashPercentage = function() {
  return /** @type{?proto.BigUInt} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.BigUInt, 5));
};


/** @param {?proto.BigUInt|undefined} value */
proto.ValidatorStatisticV2.prototype.setSlashPercentage = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.ValidatorStatisticV2.prototype.clearSlashPercentage = function() {
  this.setSlashPercentage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ValidatorStatisticV2.prototype.hasSlashPercentage = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional BigUInt distribution_total = 6;
 * @return {?proto.BigUInt}
 */
proto.ValidatorStatisticV2.prototype.getDistributionTotal = function() {
  return /** @type{?proto.BigUInt} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.BigUInt, 6));
};


/** @param {?proto.BigUInt|undefined} value */
proto.ValidatorStatisticV2.prototype.setDistributionTotal = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.ValidatorStatisticV2.prototype.clearDistributionTotal = function() {
  this.setDistributionTotal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ValidatorStatisticV2.prototype.hasDistributionTotal = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional BigUInt delegation_total = 7;
 * @return {?proto.BigUInt}
 */
proto.ValidatorStatisticV2.prototype.getDelegationTotal = function() {
  return /** @type{?proto.BigUInt} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.BigUInt, 7));
};


/** @param {?proto.BigUInt|undefined} value */
proto.ValidatorStatisticV2.prototype.setDelegationTotal = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.ValidatorStatisticV2.prototype.clearDelegationTotal = function() {
  this.setDelegationTotal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ValidatorStatisticV2.prototype.hasDelegationTotal = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional BigUInt whitelist_amount = 8;
 * @return {?proto.BigUInt}
 */
proto.ValidatorStatisticV2.prototype.getWhitelistAmount = function() {
  return /** @type{?proto.BigUInt} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.BigUInt, 8));
};


/** @param {?proto.BigUInt|undefined} value */
proto.ValidatorStatisticV2.prototype.setWhitelistAmount = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.ValidatorStatisticV2.prototype.clearWhitelistAmount = function() {
  this.setWhitelistAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ValidatorStatisticV2.prototype.hasWhitelistAmount = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint64 whitelist_locktime = 9;
 * @return {number}
 */
proto.ValidatorStatisticV2.prototype.getWhitelistLocktime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.ValidatorStatisticV2.prototype.setWhitelistLocktime = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ValidatorStatisticListV2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ValidatorStatisticListV2.repeatedFields_, null);
};
goog.inherits(proto.ValidatorStatisticListV2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ValidatorStatisticListV2.displayName = 'proto.ValidatorStatisticListV2';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ValidatorStatisticListV2.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ValidatorStatisticListV2.prototype.toObject = function(opt_includeInstance) {
  return proto.ValidatorStatisticListV2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ValidatorStatisticListV2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ValidatorStatisticListV2.toObject = function(includeInstance, msg) {
  var f, obj = {
    statisticsList: jspb.Message.toObjectList(msg.getStatisticsList(),
    proto.ValidatorStatisticV2.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ValidatorStatisticListV2}
 */
proto.ValidatorStatisticListV2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ValidatorStatisticListV2;
  return proto.ValidatorStatisticListV2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ValidatorStatisticListV2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ValidatorStatisticListV2}
 */
proto.ValidatorStatisticListV2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ValidatorStatisticV2;
      reader.readMessage(value,proto.ValidatorStatisticV2.deserializeBinaryFromReader);
      msg.addStatistics(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ValidatorStatisticListV2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ValidatorStatisticListV2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ValidatorStatisticListV2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ValidatorStatisticListV2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatisticsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ValidatorStatisticV2.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ValidatorStatisticV2 statistics = 1;
 * @return {!Array.<!proto.ValidatorStatisticV2>}
 */
proto.ValidatorStatisticListV2.prototype.getStatisticsList = function() {
  return /** @type{!Array.<!proto.ValidatorStatisticV2>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ValidatorStatisticV2, 1));
};


/** @param {!Array.<!proto.ValidatorStatisticV2>} value */
proto.ValidatorStatisticListV2.prototype.setStatisticsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ValidatorStatisticV2=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ValidatorStatisticV2}
 */
proto.ValidatorStatisticListV2.prototype.addStatistics = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ValidatorStatisticV2, opt_index);
};


proto.ValidatorStatisticListV2.prototype.clearStatisticsList = function() {
  this.setStatisticsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CandidateV2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CandidateV2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CandidateV2.displayName = 'proto.CandidateV2';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CandidateV2.prototype.toObject = function(opt_includeInstance) {
  return proto.CandidateV2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CandidateV2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CandidateV2.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: (f = msg.getAddress()) && proto_loom_pb.Address.toObject(includeInstance, f),
    pubKey: msg.getPubKey_asB64(),
    fee: jspb.Message.getFieldWithDefault(msg, 3, "0"),
    newfee: jspb.Message.getFieldWithDefault(msg, 4, "0"),
    feedelaycounter: jspb.Message.getFieldWithDefault(msg, 5, "0"),
    name: jspb.Message.getFieldWithDefault(msg, 6, ""),
    description: jspb.Message.getFieldWithDefault(msg, 7, ""),
    website: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CandidateV2}
 */
proto.CandidateV2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CandidateV2;
  return proto.CandidateV2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CandidateV2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CandidateV2}
 */
proto.CandidateV2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_loom_pb.Address;
      reader.readMessage(value,proto_loom_pb.Address.deserializeBinaryFromReader);
      msg.setAddress(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPubKey(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setFee(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setNewfee(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setFeedelaycounter(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setWebsite(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CandidateV2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CandidateV2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CandidateV2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CandidateV2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_loom_pb.Address.serializeBinaryToWriter
    );
  }
  f = message.getPubKey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getFee();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      3,
      f
    );
  }
  f = message.getNewfee();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      4,
      f
    );
  }
  f = message.getFeedelaycounter();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      5,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getWebsite();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional Address address = 1;
 * @return {?proto.Address}
 */
proto.CandidateV2.prototype.getAddress = function() {
  return /** @type{?proto.Address} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.Address, 1));
};


/** @param {?proto.Address|undefined} value */
proto.CandidateV2.prototype.setAddress = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.CandidateV2.prototype.clearAddress = function() {
  this.setAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CandidateV2.prototype.hasAddress = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes pub_key = 2;
 * @return {!(string|Uint8Array)}
 */
proto.CandidateV2.prototype.getPubKey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes pub_key = 2;
 * This is a type-conversion wrapper around `getPubKey()`
 * @return {string}
 */
proto.CandidateV2.prototype.getPubKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPubKey()));
};


/**
 * optional bytes pub_key = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPubKey()`
 * @return {!Uint8Array}
 */
proto.CandidateV2.prototype.getPubKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPubKey()));
};


/** @param {!(string|Uint8Array)} value */
proto.CandidateV2.prototype.setPubKey = function(value) {
  jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional uint64 fee = 3;
 * @return {string}
 */
proto.CandidateV2.prototype.getFee = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, "0"));
};


/** @param {string} value */
proto.CandidateV2.prototype.setFee = function(value) {
  jspb.Message.setProto3StringIntField(this, 3, value);
};


/**
 * optional uint64 newFee = 4;
 * @return {string}
 */
proto.CandidateV2.prototype.getNewfee = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, "0"));
};


/** @param {string} value */
proto.CandidateV2.prototype.setNewfee = function(value) {
  jspb.Message.setProto3StringIntField(this, 4, value);
};


/**
 * optional uint64 feeDelayCounter = 5;
 * @return {string}
 */
proto.CandidateV2.prototype.getFeedelaycounter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, "0"));
};


/** @param {string} value */
proto.CandidateV2.prototype.setFeedelaycounter = function(value) {
  jspb.Message.setProto3StringIntField(this, 5, value);
};


/**
 * optional string name = 6;
 * @return {string}
 */
proto.CandidateV2.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.CandidateV2.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string description = 7;
 * @return {string}
 */
proto.CandidateV2.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.CandidateV2.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string website = 8;
 * @return {string}
 */
proto.CandidateV2.prototype.getWebsite = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.CandidateV2.prototype.setWebsite = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CandidateListV2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CandidateListV2.repeatedFields_, null);
};
goog.inherits(proto.CandidateListV2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CandidateListV2.displayName = 'proto.CandidateListV2';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CandidateListV2.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CandidateListV2.prototype.toObject = function(opt_includeInstance) {
  return proto.CandidateListV2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CandidateListV2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CandidateListV2.toObject = function(includeInstance, msg) {
  var f, obj = {
    candidatesList: jspb.Message.toObjectList(msg.getCandidatesList(),
    proto.CandidateV2.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CandidateListV2}
 */
proto.CandidateListV2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CandidateListV2;
  return proto.CandidateListV2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CandidateListV2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CandidateListV2}
 */
proto.CandidateListV2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.CandidateV2;
      reader.readMessage(value,proto.CandidateV2.deserializeBinaryFromReader);
      msg.addCandidates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CandidateListV2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CandidateListV2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CandidateListV2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CandidateListV2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCandidatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.CandidateV2.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CandidateV2 candidates = 1;
 * @return {!Array.<!proto.CandidateV2>}
 */
proto.CandidateListV2.prototype.getCandidatesList = function() {
  return /** @type{!Array.<!proto.CandidateV2>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.CandidateV2, 1));
};


/** @param {!Array.<!proto.CandidateV2>} value */
proto.CandidateListV2.prototype.setCandidatesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.CandidateV2=} opt_value
 * @param {number=} opt_index
 * @return {!proto.CandidateV2}
 */
proto.CandidateListV2.prototype.addCandidates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.CandidateV2, opt_index);
};


proto.CandidateListV2.prototype.clearCandidatesList = function() {
  this.setCandidatesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DelegationV2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DelegationV2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.DelegationV2.displayName = 'proto.DelegationV2';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DelegationV2.prototype.toObject = function(opt_includeInstance) {
  return proto.DelegationV2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DelegationV2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DelegationV2.toObject = function(includeInstance, msg) {
  var f, obj = {
    validator: (f = msg.getValidator()) && proto_loom_pb.Address.toObject(includeInstance, f),
    delegator: (f = msg.getDelegator()) && proto_loom_pb.Address.toObject(includeInstance, f),
    amount: (f = msg.getAmount()) && proto_loom_pb.BigUInt.toObject(includeInstance, f),
    updateAmount: (f = msg.getUpdateAmount()) && proto_loom_pb.BigUInt.toObject(includeInstance, f),
    height: jspb.Message.getFieldWithDefault(msg, 5, "0"),
    lockTime: jspb.Message.getFieldWithDefault(msg, 6, "0"),
    locktimeTier: jspb.Message.getFieldWithDefault(msg, 7, 0),
    state: jspb.Message.getFieldWithDefault(msg, 8, 0),
    updateValidator: (f = msg.getUpdateValidator()) && proto_loom_pb.Address.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DelegationV2}
 */
proto.DelegationV2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DelegationV2;
  return proto.DelegationV2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DelegationV2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DelegationV2}
 */
proto.DelegationV2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_loom_pb.Address;
      reader.readMessage(value,proto_loom_pb.Address.deserializeBinaryFromReader);
      msg.setValidator(value);
      break;
    case 2:
      var value = new proto_loom_pb.Address;
      reader.readMessage(value,proto_loom_pb.Address.deserializeBinaryFromReader);
      msg.setDelegator(value);
      break;
    case 3:
      var value = new proto_loom_pb.BigUInt;
      reader.readMessage(value,proto_loom_pb.BigUInt.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    case 4:
      var value = new proto_loom_pb.BigUInt;
      reader.readMessage(value,proto_loom_pb.BigUInt.deserializeBinaryFromReader);
      msg.setUpdateAmount(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setHeight(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setLockTime(value);
      break;
    case 7:
      var value = /** @type {!proto.DelegationV2.LocktimeTier} */ (reader.readEnum());
      msg.setLocktimeTier(value);
      break;
    case 8:
      var value = /** @type {!proto.DelegationV2.DelegationState} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 9:
      var value = new proto_loom_pb.Address;
      reader.readMessage(value,proto_loom_pb.Address.deserializeBinaryFromReader);
      msg.setUpdateValidator(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DelegationV2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DelegationV2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DelegationV2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DelegationV2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValidator();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_loom_pb.Address.serializeBinaryToWriter
    );
  }
  f = message.getDelegator();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto_loom_pb.Address.serializeBinaryToWriter
    );
  }
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto_loom_pb.BigUInt.serializeBinaryToWriter
    );
  }
  f = message.getUpdateAmount();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto_loom_pb.BigUInt.serializeBinaryToWriter
    );
  }
  f = message.getHeight();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      5,
      f
    );
  }
  f = message.getLockTime();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      6,
      f
    );
  }
  f = message.getLocktimeTier();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getUpdateValidator();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto_loom_pb.Address.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.DelegationV2.LocktimeTier = {
  TIER_ZERO: 0,
  TIER_ONE: 1,
  TIER_TWO: 2,
  TIER_THREE: 3
};

/**
 * @enum {number}
 */
proto.DelegationV2.DelegationState = {
  BONDING: 0,
  BONDED: 1,
  UNBONDING: 2,
  REDELEGATING: 3
};

/**
 * optional Address validator = 1;
 * @return {?proto.Address}
 */
proto.DelegationV2.prototype.getValidator = function() {
  return /** @type{?proto.Address} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.Address, 1));
};


/** @param {?proto.Address|undefined} value */
proto.DelegationV2.prototype.setValidator = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.DelegationV2.prototype.clearValidator = function() {
  this.setValidator(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DelegationV2.prototype.hasValidator = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Address delegator = 2;
 * @return {?proto.Address}
 */
proto.DelegationV2.prototype.getDelegator = function() {
  return /** @type{?proto.Address} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.Address, 2));
};


/** @param {?proto.Address|undefined} value */
proto.DelegationV2.prototype.setDelegator = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.DelegationV2.prototype.clearDelegator = function() {
  this.setDelegator(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DelegationV2.prototype.hasDelegator = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional BigUInt amount = 3;
 * @return {?proto.BigUInt}
 */
proto.DelegationV2.prototype.getAmount = function() {
  return /** @type{?proto.BigUInt} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.BigUInt, 3));
};


/** @param {?proto.BigUInt|undefined} value */
proto.DelegationV2.prototype.setAmount = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.DelegationV2.prototype.clearAmount = function() {
  this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DelegationV2.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional BigUInt update_amount = 4;
 * @return {?proto.BigUInt}
 */
proto.DelegationV2.prototype.getUpdateAmount = function() {
  return /** @type{?proto.BigUInt} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.BigUInt, 4));
};


/** @param {?proto.BigUInt|undefined} value */
proto.DelegationV2.prototype.setUpdateAmount = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.DelegationV2.prototype.clearUpdateAmount = function() {
  this.setUpdateAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DelegationV2.prototype.hasUpdateAmount = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint64 height = 5;
 * @return {string}
 */
proto.DelegationV2.prototype.getHeight = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, "0"));
};


/** @param {string} value */
proto.DelegationV2.prototype.setHeight = function(value) {
  jspb.Message.setProto3StringIntField(this, 5, value);
};


/**
 * optional uint64 lock_time = 6;
 * @return {string}
 */
proto.DelegationV2.prototype.getLockTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, "0"));
};


/** @param {string} value */
proto.DelegationV2.prototype.setLockTime = function(value) {
  jspb.Message.setProto3StringIntField(this, 6, value);
};


/**
 * optional LocktimeTier locktime_tier = 7;
 * @return {!proto.DelegationV2.LocktimeTier}
 */
proto.DelegationV2.prototype.getLocktimeTier = function() {
  return /** @type {!proto.DelegationV2.LocktimeTier} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {!proto.DelegationV2.LocktimeTier} value */
proto.DelegationV2.prototype.setLocktimeTier = function(value) {
  jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional DelegationState state = 8;
 * @return {!proto.DelegationV2.DelegationState}
 */
proto.DelegationV2.prototype.getState = function() {
  return /** @type {!proto.DelegationV2.DelegationState} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {!proto.DelegationV2.DelegationState} value */
proto.DelegationV2.prototype.setState = function(value) {
  jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional Address update_validator = 9;
 * @return {?proto.Address}
 */
proto.DelegationV2.prototype.getUpdateValidator = function() {
  return /** @type{?proto.Address} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.Address, 9));
};


/** @param {?proto.Address|undefined} value */
proto.DelegationV2.prototype.setUpdateValidator = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.DelegationV2.prototype.clearUpdateValidator = function() {
  this.setUpdateValidator(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DelegationV2.prototype.hasUpdateValidator = function() {
  return jspb.Message.getField(this, 9) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DelegationListV2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.DelegationListV2.repeatedFields_, null);
};
goog.inherits(proto.DelegationListV2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.DelegationListV2.displayName = 'proto.DelegationListV2';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.DelegationListV2.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DelegationListV2.prototype.toObject = function(opt_includeInstance) {
  return proto.DelegationListV2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DelegationListV2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DelegationListV2.toObject = function(includeInstance, msg) {
  var f, obj = {
    delegationsList: jspb.Message.toObjectList(msg.getDelegationsList(),
    proto.DelegationV2.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DelegationListV2}
 */
proto.DelegationListV2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DelegationListV2;
  return proto.DelegationListV2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DelegationListV2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DelegationListV2}
 */
proto.DelegationListV2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.DelegationV2;
      reader.readMessage(value,proto.DelegationV2.deserializeBinaryFromReader);
      msg.addDelegations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DelegationListV2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DelegationListV2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DelegationListV2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DelegationListV2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDelegationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.DelegationV2.serializeBinaryToWriter
    );
  }
};


/**
 * repeated DelegationV2 delegations = 1;
 * @return {!Array.<!proto.DelegationV2>}
 */
proto.DelegationListV2.prototype.getDelegationsList = function() {
  return /** @type{!Array.<!proto.DelegationV2>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.DelegationV2, 1));
};


/** @param {!Array.<!proto.DelegationV2>} value */
proto.DelegationListV2.prototype.setDelegationsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.DelegationV2=} opt_value
 * @param {number=} opt_index
 * @return {!proto.DelegationV2}
 */
proto.DelegationListV2.prototype.addDelegations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.DelegationV2, opt_index);
};


proto.DelegationListV2.prototype.clearDelegationsList = function() {
  this.setDelegationsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DistributionV2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DistributionV2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.DistributionV2.displayName = 'proto.DistributionV2';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DistributionV2.prototype.toObject = function(opt_includeInstance) {
  return proto.DistributionV2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DistributionV2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DistributionV2.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: (f = msg.getAddress()) && proto_loom_pb.Address.toObject(includeInstance, f),
    amount: (f = msg.getAmount()) && proto_loom_pb.BigUInt.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DistributionV2}
 */
proto.DistributionV2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DistributionV2;
  return proto.DistributionV2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DistributionV2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DistributionV2}
 */
proto.DistributionV2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_loom_pb.Address;
      reader.readMessage(value,proto_loom_pb.Address.deserializeBinaryFromReader);
      msg.setAddress(value);
      break;
    case 2:
      var value = new proto_loom_pb.BigUInt;
      reader.readMessage(value,proto_loom_pb.BigUInt.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DistributionV2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DistributionV2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DistributionV2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DistributionV2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_loom_pb.Address.serializeBinaryToWriter
    );
  }
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto_loom_pb.BigUInt.serializeBinaryToWriter
    );
  }
};


/**
 * optional Address address = 1;
 * @return {?proto.Address}
 */
proto.DistributionV2.prototype.getAddress = function() {
  return /** @type{?proto.Address} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.Address, 1));
};


/** @param {?proto.Address|undefined} value */
proto.DistributionV2.prototype.setAddress = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.DistributionV2.prototype.clearAddress = function() {
  this.setAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DistributionV2.prototype.hasAddress = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional BigUInt amount = 2;
 * @return {?proto.BigUInt}
 */
proto.DistributionV2.prototype.getAmount = function() {
  return /** @type{?proto.BigUInt} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.BigUInt, 2));
};


/** @param {?proto.BigUInt|undefined} value */
proto.DistributionV2.prototype.setAmount = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.DistributionV2.prototype.clearAmount = function() {
  this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DistributionV2.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DistributionListV2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.DistributionListV2.repeatedFields_, null);
};
goog.inherits(proto.DistributionListV2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.DistributionListV2.displayName = 'proto.DistributionListV2';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.DistributionListV2.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DistributionListV2.prototype.toObject = function(opt_includeInstance) {
  return proto.DistributionListV2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DistributionListV2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DistributionListV2.toObject = function(includeInstance, msg) {
  var f, obj = {
    distributionsList: jspb.Message.toObjectList(msg.getDistributionsList(),
    proto.DistributionV2.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DistributionListV2}
 */
proto.DistributionListV2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DistributionListV2;
  return proto.DistributionListV2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DistributionListV2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DistributionListV2}
 */
proto.DistributionListV2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.DistributionV2;
      reader.readMessage(value,proto.DistributionV2.deserializeBinaryFromReader);
      msg.addDistributions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DistributionListV2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DistributionListV2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DistributionListV2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DistributionListV2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDistributionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.DistributionV2.serializeBinaryToWriter
    );
  }
};


/**
 * repeated DistributionV2 distributions = 1;
 * @return {!Array.<!proto.DistributionV2>}
 */
proto.DistributionListV2.prototype.getDistributionsList = function() {
  return /** @type{!Array.<!proto.DistributionV2>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.DistributionV2, 1));
};


/** @param {!Array.<!proto.DistributionV2>} value */
proto.DistributionListV2.prototype.setDistributionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.DistributionV2=} opt_value
 * @param {number=} opt_index
 * @return {!proto.DistributionV2}
 */
proto.DistributionListV2.prototype.addDistributions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.DistributionV2, opt_index);
};


proto.DistributionListV2.prototype.clearDistributionsList = function() {
  this.setDistributionsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DPOSInitRequestV2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.DPOSInitRequestV2.repeatedFields_, null);
};
goog.inherits(proto.DPOSInitRequestV2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.DPOSInitRequestV2.displayName = 'proto.DPOSInitRequestV2';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.DPOSInitRequestV2.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DPOSInitRequestV2.prototype.toObject = function(opt_includeInstance) {
  return proto.DPOSInitRequestV2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DPOSInitRequestV2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DPOSInitRequestV2.toObject = function(includeInstance, msg) {
  var f, obj = {
    params: (f = msg.getParams()) && proto.ParamsV2.toObject(includeInstance, f),
    validatorsList: jspb.Message.toObjectList(msg.getValidatorsList(),
    proto.Validator.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DPOSInitRequestV2}
 */
proto.DPOSInitRequestV2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DPOSInitRequestV2;
  return proto.DPOSInitRequestV2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DPOSInitRequestV2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DPOSInitRequestV2}
 */
proto.DPOSInitRequestV2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ParamsV2;
      reader.readMessage(value,proto.ParamsV2.deserializeBinaryFromReader);
      msg.setParams(value);
      break;
    case 2:
      var value = new proto.Validator;
      reader.readMessage(value,proto.Validator.deserializeBinaryFromReader);
      msg.addValidators(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DPOSInitRequestV2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DPOSInitRequestV2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DPOSInitRequestV2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DPOSInitRequestV2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParams();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ParamsV2.serializeBinaryToWriter
    );
  }
  f = message.getValidatorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Validator.serializeBinaryToWriter
    );
  }
};


/**
 * optional ParamsV2 params = 1;
 * @return {?proto.ParamsV2}
 */
proto.DPOSInitRequestV2.prototype.getParams = function() {
  return /** @type{?proto.ParamsV2} */ (
    jspb.Message.getWrapperField(this, proto.ParamsV2, 1));
};


/** @param {?proto.ParamsV2|undefined} value */
proto.DPOSInitRequestV2.prototype.setParams = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.DPOSInitRequestV2.prototype.clearParams = function() {
  this.setParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DPOSInitRequestV2.prototype.hasParams = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Validator validators = 2;
 * @return {!Array.<!proto.Validator>}
 */
proto.DPOSInitRequestV2.prototype.getValidatorsList = function() {
  return /** @type{!Array.<!proto.Validator>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Validator, 2));
};


/** @param {!Array.<!proto.Validator>} value */
proto.DPOSInitRequestV2.prototype.setValidatorsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Validator=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Validator}
 */
proto.DPOSInitRequestV2.prototype.addValidators = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Validator, opt_index);
};


proto.DPOSInitRequestV2.prototype.clearValidatorsList = function() {
  this.setValidatorsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DelegateRequestV2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DelegateRequestV2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.DelegateRequestV2.displayName = 'proto.DelegateRequestV2';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DelegateRequestV2.prototype.toObject = function(opt_includeInstance) {
  return proto.DelegateRequestV2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DelegateRequestV2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DelegateRequestV2.toObject = function(includeInstance, msg) {
  var f, obj = {
    validatorAddress: (f = msg.getValidatorAddress()) && proto_loom_pb.Address.toObject(includeInstance, f),
    amount: (f = msg.getAmount()) && proto_loom_pb.BigUInt.toObject(includeInstance, f),
    locktimeTier: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DelegateRequestV2}
 */
proto.DelegateRequestV2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DelegateRequestV2;
  return proto.DelegateRequestV2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DelegateRequestV2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DelegateRequestV2}
 */
proto.DelegateRequestV2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_loom_pb.Address;
      reader.readMessage(value,proto_loom_pb.Address.deserializeBinaryFromReader);
      msg.setValidatorAddress(value);
      break;
    case 2:
      var value = new proto_loom_pb.BigUInt;
      reader.readMessage(value,proto_loom_pb.BigUInt.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLocktimeTier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DelegateRequestV2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DelegateRequestV2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DelegateRequestV2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DelegateRequestV2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValidatorAddress();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_loom_pb.Address.serializeBinaryToWriter
    );
  }
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto_loom_pb.BigUInt.serializeBinaryToWriter
    );
  }
  f = message.getLocktimeTier();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional Address validator_address = 1;
 * @return {?proto.Address}
 */
proto.DelegateRequestV2.prototype.getValidatorAddress = function() {
  return /** @type{?proto.Address} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.Address, 1));
};


/** @param {?proto.Address|undefined} value */
proto.DelegateRequestV2.prototype.setValidatorAddress = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.DelegateRequestV2.prototype.clearValidatorAddress = function() {
  this.setValidatorAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DelegateRequestV2.prototype.hasValidatorAddress = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional BigUInt amount = 2;
 * @return {?proto.BigUInt}
 */
proto.DelegateRequestV2.prototype.getAmount = function() {
  return /** @type{?proto.BigUInt} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.BigUInt, 2));
};


/** @param {?proto.BigUInt|undefined} value */
proto.DelegateRequestV2.prototype.setAmount = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.DelegateRequestV2.prototype.clearAmount = function() {
  this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DelegateRequestV2.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 locktime_tier = 3;
 * @return {number}
 */
proto.DelegateRequestV2.prototype.getLocktimeTier = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.DelegateRequestV2.prototype.setLocktimeTier = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RedelegateRequestV2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.RedelegateRequestV2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RedelegateRequestV2.displayName = 'proto.RedelegateRequestV2';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RedelegateRequestV2.prototype.toObject = function(opt_includeInstance) {
  return proto.RedelegateRequestV2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RedelegateRequestV2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RedelegateRequestV2.toObject = function(includeInstance, msg) {
  var f, obj = {
    validatorAddress: (f = msg.getValidatorAddress()) && proto_loom_pb.Address.toObject(includeInstance, f),
    formerValidatorAddress: (f = msg.getFormerValidatorAddress()) && proto_loom_pb.Address.toObject(includeInstance, f),
    amount: (f = msg.getAmount()) && proto_loom_pb.BigUInt.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RedelegateRequestV2}
 */
proto.RedelegateRequestV2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RedelegateRequestV2;
  return proto.RedelegateRequestV2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RedelegateRequestV2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RedelegateRequestV2}
 */
proto.RedelegateRequestV2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_loom_pb.Address;
      reader.readMessage(value,proto_loom_pb.Address.deserializeBinaryFromReader);
      msg.setValidatorAddress(value);
      break;
    case 2:
      var value = new proto_loom_pb.Address;
      reader.readMessage(value,proto_loom_pb.Address.deserializeBinaryFromReader);
      msg.setFormerValidatorAddress(value);
      break;
    case 3:
      var value = new proto_loom_pb.BigUInt;
      reader.readMessage(value,proto_loom_pb.BigUInt.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RedelegateRequestV2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.RedelegateRequestV2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.RedelegateRequestV2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RedelegateRequestV2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValidatorAddress();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_loom_pb.Address.serializeBinaryToWriter
    );
  }
  f = message.getFormerValidatorAddress();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto_loom_pb.Address.serializeBinaryToWriter
    );
  }
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto_loom_pb.BigUInt.serializeBinaryToWriter
    );
  }
};


/**
 * optional Address validator_address = 1;
 * @return {?proto.Address}
 */
proto.RedelegateRequestV2.prototype.getValidatorAddress = function() {
  return /** @type{?proto.Address} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.Address, 1));
};


/** @param {?proto.Address|undefined} value */
proto.RedelegateRequestV2.prototype.setValidatorAddress = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.RedelegateRequestV2.prototype.clearValidatorAddress = function() {
  this.setValidatorAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.RedelegateRequestV2.prototype.hasValidatorAddress = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Address former_validator_address = 2;
 * @return {?proto.Address}
 */
proto.RedelegateRequestV2.prototype.getFormerValidatorAddress = function() {
  return /** @type{?proto.Address} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.Address, 2));
};


/** @param {?proto.Address|undefined} value */
proto.RedelegateRequestV2.prototype.setFormerValidatorAddress = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.RedelegateRequestV2.prototype.clearFormerValidatorAddress = function() {
  this.setFormerValidatorAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.RedelegateRequestV2.prototype.hasFormerValidatorAddress = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional BigUInt amount = 3;
 * @return {?proto.BigUInt}
 */
proto.RedelegateRequestV2.prototype.getAmount = function() {
  return /** @type{?proto.BigUInt} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.BigUInt, 3));
};


/** @param {?proto.BigUInt|undefined} value */
proto.RedelegateRequestV2.prototype.setAmount = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.RedelegateRequestV2.prototype.clearAmount = function() {
  this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.RedelegateRequestV2.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CheckDelegationRequestV2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CheckDelegationRequestV2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CheckDelegationRequestV2.displayName = 'proto.CheckDelegationRequestV2';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CheckDelegationRequestV2.prototype.toObject = function(opt_includeInstance) {
  return proto.CheckDelegationRequestV2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CheckDelegationRequestV2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CheckDelegationRequestV2.toObject = function(includeInstance, msg) {
  var f, obj = {
    validatorAddress: (f = msg.getValidatorAddress()) && proto_loom_pb.Address.toObject(includeInstance, f),
    delegatorAddress: (f = msg.getDelegatorAddress()) && proto_loom_pb.Address.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CheckDelegationRequestV2}
 */
proto.CheckDelegationRequestV2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CheckDelegationRequestV2;
  return proto.CheckDelegationRequestV2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CheckDelegationRequestV2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CheckDelegationRequestV2}
 */
proto.CheckDelegationRequestV2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_loom_pb.Address;
      reader.readMessage(value,proto_loom_pb.Address.deserializeBinaryFromReader);
      msg.setValidatorAddress(value);
      break;
    case 2:
      var value = new proto_loom_pb.Address;
      reader.readMessage(value,proto_loom_pb.Address.deserializeBinaryFromReader);
      msg.setDelegatorAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CheckDelegationRequestV2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CheckDelegationRequestV2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CheckDelegationRequestV2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CheckDelegationRequestV2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValidatorAddress();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_loom_pb.Address.serializeBinaryToWriter
    );
  }
  f = message.getDelegatorAddress();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto_loom_pb.Address.serializeBinaryToWriter
    );
  }
};


/**
 * optional Address validator_address = 1;
 * @return {?proto.Address}
 */
proto.CheckDelegationRequestV2.prototype.getValidatorAddress = function() {
  return /** @type{?proto.Address} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.Address, 1));
};


/** @param {?proto.Address|undefined} value */
proto.CheckDelegationRequestV2.prototype.setValidatorAddress = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.CheckDelegationRequestV2.prototype.clearValidatorAddress = function() {
  this.setValidatorAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CheckDelegationRequestV2.prototype.hasValidatorAddress = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Address delegator_address = 2;
 * @return {?proto.Address}
 */
proto.CheckDelegationRequestV2.prototype.getDelegatorAddress = function() {
  return /** @type{?proto.Address} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.Address, 2));
};


/** @param {?proto.Address|undefined} value */
proto.CheckDelegationRequestV2.prototype.setDelegatorAddress = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.CheckDelegationRequestV2.prototype.clearDelegatorAddress = function() {
  this.setDelegatorAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CheckDelegationRequestV2.prototype.hasDelegatorAddress = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CheckDelegationResponseV2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CheckDelegationResponseV2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CheckDelegationResponseV2.displayName = 'proto.CheckDelegationResponseV2';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CheckDelegationResponseV2.prototype.toObject = function(opt_includeInstance) {
  return proto.CheckDelegationResponseV2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CheckDelegationResponseV2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CheckDelegationResponseV2.toObject = function(includeInstance, msg) {
  var f, obj = {
    delegation: (f = msg.getDelegation()) && proto.DelegationV2.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CheckDelegationResponseV2}
 */
proto.CheckDelegationResponseV2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CheckDelegationResponseV2;
  return proto.CheckDelegationResponseV2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CheckDelegationResponseV2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CheckDelegationResponseV2}
 */
proto.CheckDelegationResponseV2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.DelegationV2;
      reader.readMessage(value,proto.DelegationV2.deserializeBinaryFromReader);
      msg.setDelegation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CheckDelegationResponseV2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CheckDelegationResponseV2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CheckDelegationResponseV2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CheckDelegationResponseV2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDelegation();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.DelegationV2.serializeBinaryToWriter
    );
  }
};


/**
 * optional DelegationV2 delegation = 1;
 * @return {?proto.DelegationV2}
 */
proto.CheckDelegationResponseV2.prototype.getDelegation = function() {
  return /** @type{?proto.DelegationV2} */ (
    jspb.Message.getWrapperField(this, proto.DelegationV2, 1));
};


/** @param {?proto.DelegationV2|undefined} value */
proto.CheckDelegationResponseV2.prototype.setDelegation = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.CheckDelegationResponseV2.prototype.clearDelegation = function() {
  this.setDelegation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CheckDelegationResponseV2.prototype.hasDelegation = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ClaimDistributionRequestV2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ClaimDistributionRequestV2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ClaimDistributionRequestV2.displayName = 'proto.ClaimDistributionRequestV2';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ClaimDistributionRequestV2.prototype.toObject = function(opt_includeInstance) {
  return proto.ClaimDistributionRequestV2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ClaimDistributionRequestV2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ClaimDistributionRequestV2.toObject = function(includeInstance, msg) {
  var f, obj = {
    withdrawalAddress: (f = msg.getWithdrawalAddress()) && proto_loom_pb.Address.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ClaimDistributionRequestV2}
 */
proto.ClaimDistributionRequestV2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ClaimDistributionRequestV2;
  return proto.ClaimDistributionRequestV2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ClaimDistributionRequestV2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ClaimDistributionRequestV2}
 */
proto.ClaimDistributionRequestV2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_loom_pb.Address;
      reader.readMessage(value,proto_loom_pb.Address.deserializeBinaryFromReader);
      msg.setWithdrawalAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ClaimDistributionRequestV2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ClaimDistributionRequestV2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ClaimDistributionRequestV2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ClaimDistributionRequestV2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWithdrawalAddress();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_loom_pb.Address.serializeBinaryToWriter
    );
  }
};


/**
 * optional Address withdrawal_address = 1;
 * @return {?proto.Address}
 */
proto.ClaimDistributionRequestV2.prototype.getWithdrawalAddress = function() {
  return /** @type{?proto.Address} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.Address, 1));
};


/** @param {?proto.Address|undefined} value */
proto.ClaimDistributionRequestV2.prototype.setWithdrawalAddress = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.ClaimDistributionRequestV2.prototype.clearWithdrawalAddress = function() {
  this.setWithdrawalAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ClaimDistributionRequestV2.prototype.hasWithdrawalAddress = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ClaimDistributionResponseV2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ClaimDistributionResponseV2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ClaimDistributionResponseV2.displayName = 'proto.ClaimDistributionResponseV2';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ClaimDistributionResponseV2.prototype.toObject = function(opt_includeInstance) {
  return proto.ClaimDistributionResponseV2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ClaimDistributionResponseV2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ClaimDistributionResponseV2.toObject = function(includeInstance, msg) {
  var f, obj = {
    amount: (f = msg.getAmount()) && proto_loom_pb.BigUInt.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ClaimDistributionResponseV2}
 */
proto.ClaimDistributionResponseV2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ClaimDistributionResponseV2;
  return proto.ClaimDistributionResponseV2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ClaimDistributionResponseV2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ClaimDistributionResponseV2}
 */
proto.ClaimDistributionResponseV2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_loom_pb.BigUInt;
      reader.readMessage(value,proto_loom_pb.BigUInt.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ClaimDistributionResponseV2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ClaimDistributionResponseV2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ClaimDistributionResponseV2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ClaimDistributionResponseV2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_loom_pb.BigUInt.serializeBinaryToWriter
    );
  }
};


/**
 * optional BigUInt amount = 1;
 * @return {?proto.BigUInt}
 */
proto.ClaimDistributionResponseV2.prototype.getAmount = function() {
  return /** @type{?proto.BigUInt} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.BigUInt, 1));
};


/** @param {?proto.BigUInt|undefined} value */
proto.ClaimDistributionResponseV2.prototype.setAmount = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.ClaimDistributionResponseV2.prototype.clearAmount = function() {
  this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ClaimDistributionResponseV2.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.UnbondRequestV2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.UnbondRequestV2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.UnbondRequestV2.displayName = 'proto.UnbondRequestV2';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.UnbondRequestV2.prototype.toObject = function(opt_includeInstance) {
  return proto.UnbondRequestV2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.UnbondRequestV2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.UnbondRequestV2.toObject = function(includeInstance, msg) {
  var f, obj = {
    validatorAddress: (f = msg.getValidatorAddress()) && proto_loom_pb.Address.toObject(includeInstance, f),
    amount: (f = msg.getAmount()) && proto_loom_pb.BigUInt.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.UnbondRequestV2}
 */
proto.UnbondRequestV2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.UnbondRequestV2;
  return proto.UnbondRequestV2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.UnbondRequestV2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.UnbondRequestV2}
 */
proto.UnbondRequestV2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_loom_pb.Address;
      reader.readMessage(value,proto_loom_pb.Address.deserializeBinaryFromReader);
      msg.setValidatorAddress(value);
      break;
    case 2:
      var value = new proto_loom_pb.BigUInt;
      reader.readMessage(value,proto_loom_pb.BigUInt.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.UnbondRequestV2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.UnbondRequestV2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.UnbondRequestV2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.UnbondRequestV2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValidatorAddress();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_loom_pb.Address.serializeBinaryToWriter
    );
  }
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto_loom_pb.BigUInt.serializeBinaryToWriter
    );
  }
};


/**
 * optional Address validator_address = 1;
 * @return {?proto.Address}
 */
proto.UnbondRequestV2.prototype.getValidatorAddress = function() {
  return /** @type{?proto.Address} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.Address, 1));
};


/** @param {?proto.Address|undefined} value */
proto.UnbondRequestV2.prototype.setValidatorAddress = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.UnbondRequestV2.prototype.clearValidatorAddress = function() {
  this.setValidatorAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.UnbondRequestV2.prototype.hasValidatorAddress = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional BigUInt amount = 2;
 * @return {?proto.BigUInt}
 */
proto.UnbondRequestV2.prototype.getAmount = function() {
  return /** @type{?proto.BigUInt} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.BigUInt, 2));
};


/** @param {?proto.BigUInt|undefined} value */
proto.UnbondRequestV2.prototype.setAmount = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.UnbondRequestV2.prototype.clearAmount = function() {
  this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.UnbondRequestV2.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.WhitelistCandidateRequestV2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.WhitelistCandidateRequestV2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.WhitelistCandidateRequestV2.displayName = 'proto.WhitelistCandidateRequestV2';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.WhitelistCandidateRequestV2.prototype.toObject = function(opt_includeInstance) {
  return proto.WhitelistCandidateRequestV2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.WhitelistCandidateRequestV2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.WhitelistCandidateRequestV2.toObject = function(includeInstance, msg) {
  var f, obj = {
    candidateAddress: (f = msg.getCandidateAddress()) && proto_loom_pb.Address.toObject(includeInstance, f),
    amount: (f = msg.getAmount()) && proto_loom_pb.BigUInt.toObject(includeInstance, f),
    lockTime: jspb.Message.getFieldWithDefault(msg, 3, "0")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.WhitelistCandidateRequestV2}
 */
proto.WhitelistCandidateRequestV2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.WhitelistCandidateRequestV2;
  return proto.WhitelistCandidateRequestV2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.WhitelistCandidateRequestV2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.WhitelistCandidateRequestV2}
 */
proto.WhitelistCandidateRequestV2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_loom_pb.Address;
      reader.readMessage(value,proto_loom_pb.Address.deserializeBinaryFromReader);
      msg.setCandidateAddress(value);
      break;
    case 2:
      var value = new proto_loom_pb.BigUInt;
      reader.readMessage(value,proto_loom_pb.BigUInt.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setLockTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.WhitelistCandidateRequestV2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.WhitelistCandidateRequestV2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.WhitelistCandidateRequestV2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.WhitelistCandidateRequestV2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCandidateAddress();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_loom_pb.Address.serializeBinaryToWriter
    );
  }
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto_loom_pb.BigUInt.serializeBinaryToWriter
    );
  }
  f = message.getLockTime();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      3,
      f
    );
  }
};


/**
 * optional Address candidate_address = 1;
 * @return {?proto.Address}
 */
proto.WhitelistCandidateRequestV2.prototype.getCandidateAddress = function() {
  return /** @type{?proto.Address} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.Address, 1));
};


/** @param {?proto.Address|undefined} value */
proto.WhitelistCandidateRequestV2.prototype.setCandidateAddress = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.WhitelistCandidateRequestV2.prototype.clearCandidateAddress = function() {
  this.setCandidateAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.WhitelistCandidateRequestV2.prototype.hasCandidateAddress = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional BigUInt amount = 2;
 * @return {?proto.BigUInt}
 */
proto.WhitelistCandidateRequestV2.prototype.getAmount = function() {
  return /** @type{?proto.BigUInt} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.BigUInt, 2));
};


/** @param {?proto.BigUInt|undefined} value */
proto.WhitelistCandidateRequestV2.prototype.setAmount = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.WhitelistCandidateRequestV2.prototype.clearAmount = function() {
  this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.WhitelistCandidateRequestV2.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 lock_time = 3;
 * @return {string}
 */
proto.WhitelistCandidateRequestV2.prototype.getLockTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, "0"));
};


/** @param {string} value */
proto.WhitelistCandidateRequestV2.prototype.setLockTime = function(value) {
  jspb.Message.setProto3StringIntField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RemoveWhitelistedCandidateRequestV2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.RemoveWhitelistedCandidateRequestV2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RemoveWhitelistedCandidateRequestV2.displayName = 'proto.RemoveWhitelistedCandidateRequestV2';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RemoveWhitelistedCandidateRequestV2.prototype.toObject = function(opt_includeInstance) {
  return proto.RemoveWhitelistedCandidateRequestV2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RemoveWhitelistedCandidateRequestV2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RemoveWhitelistedCandidateRequestV2.toObject = function(includeInstance, msg) {
  var f, obj = {
    candidateAddress: (f = msg.getCandidateAddress()) && proto_loom_pb.Address.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RemoveWhitelistedCandidateRequestV2}
 */
proto.RemoveWhitelistedCandidateRequestV2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RemoveWhitelistedCandidateRequestV2;
  return proto.RemoveWhitelistedCandidateRequestV2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RemoveWhitelistedCandidateRequestV2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RemoveWhitelistedCandidateRequestV2}
 */
proto.RemoveWhitelistedCandidateRequestV2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_loom_pb.Address;
      reader.readMessage(value,proto_loom_pb.Address.deserializeBinaryFromReader);
      msg.setCandidateAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RemoveWhitelistedCandidateRequestV2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.RemoveWhitelistedCandidateRequestV2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.RemoveWhitelistedCandidateRequestV2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RemoveWhitelistedCandidateRequestV2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCandidateAddress();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_loom_pb.Address.serializeBinaryToWriter
    );
  }
};


/**
 * optional Address candidate_address = 1;
 * @return {?proto.Address}
 */
proto.RemoveWhitelistedCandidateRequestV2.prototype.getCandidateAddress = function() {
  return /** @type{?proto.Address} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.Address, 1));
};


/** @param {?proto.Address|undefined} value */
proto.RemoveWhitelistedCandidateRequestV2.prototype.setCandidateAddress = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.RemoveWhitelistedCandidateRequestV2.prototype.clearCandidateAddress = function() {
  this.setCandidateAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.RemoveWhitelistedCandidateRequestV2.prototype.hasCandidateAddress = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RegisterCandidateRequestV2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.RegisterCandidateRequestV2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.RegisterCandidateRequestV2.displayName = 'proto.RegisterCandidateRequestV2';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RegisterCandidateRequestV2.prototype.toObject = function(opt_includeInstance) {
  return proto.RegisterCandidateRequestV2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RegisterCandidateRequestV2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RegisterCandidateRequestV2.toObject = function(includeInstance, msg) {
  var f, obj = {
    pubKey: msg.getPubKey_asB64(),
    fee: jspb.Message.getFieldWithDefault(msg, 2, "0"),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    website: jspb.Message.getFieldWithDefault(msg, 5, ""),
    locktimeTier: jspb.Message.getFieldWithDefault(msg, 6, "0")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RegisterCandidateRequestV2}
 */
proto.RegisterCandidateRequestV2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RegisterCandidateRequestV2;
  return proto.RegisterCandidateRequestV2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RegisterCandidateRequestV2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RegisterCandidateRequestV2}
 */
proto.RegisterCandidateRequestV2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPubKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setFee(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setWebsite(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setLocktimeTier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RegisterCandidateRequestV2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.RegisterCandidateRequestV2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.RegisterCandidateRequestV2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RegisterCandidateRequestV2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPubKey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getFee();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getWebsite();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getLocktimeTier();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      6,
      f
    );
  }
};


/**
 * optional bytes pub_key = 1;
 * @return {!(string|Uint8Array)}
 */
proto.RegisterCandidateRequestV2.prototype.getPubKey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes pub_key = 1;
 * This is a type-conversion wrapper around `getPubKey()`
 * @return {string}
 */
proto.RegisterCandidateRequestV2.prototype.getPubKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPubKey()));
};


/**
 * optional bytes pub_key = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPubKey()`
 * @return {!Uint8Array}
 */
proto.RegisterCandidateRequestV2.prototype.getPubKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPubKey()));
};


/** @param {!(string|Uint8Array)} value */
proto.RegisterCandidateRequestV2.prototype.setPubKey = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional uint64 fee = 2;
 * @return {string}
 */
proto.RegisterCandidateRequestV2.prototype.getFee = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "0"));
};


/** @param {string} value */
proto.RegisterCandidateRequestV2.prototype.setFee = function(value) {
  jspb.Message.setProto3StringIntField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.RegisterCandidateRequestV2.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.RegisterCandidateRequestV2.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.RegisterCandidateRequestV2.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.RegisterCandidateRequestV2.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string website = 5;
 * @return {string}
 */
proto.RegisterCandidateRequestV2.prototype.getWebsite = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.RegisterCandidateRequestV2.prototype.setWebsite = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional uint64 locktime_tier = 6;
 * @return {string}
 */
proto.RegisterCandidateRequestV2.prototype.getLocktimeTier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, "0"));
};


/** @param {string} value */
proto.RegisterCandidateRequestV2.prototype.setLocktimeTier = function(value) {
  jspb.Message.setProto3StringIntField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ChangeCandidateFeeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ChangeCandidateFeeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ChangeCandidateFeeRequest.displayName = 'proto.ChangeCandidateFeeRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ChangeCandidateFeeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ChangeCandidateFeeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ChangeCandidateFeeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ChangeCandidateFeeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    fee: jspb.Message.getFieldWithDefault(msg, 1, "0")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ChangeCandidateFeeRequest}
 */
proto.ChangeCandidateFeeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ChangeCandidateFeeRequest;
  return proto.ChangeCandidateFeeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ChangeCandidateFeeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ChangeCandidateFeeRequest}
 */
proto.ChangeCandidateFeeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setFee(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ChangeCandidateFeeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ChangeCandidateFeeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ChangeCandidateFeeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ChangeCandidateFeeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFee();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
};


/**
 * optional uint64 fee = 1;
 * @return {string}
 */
proto.ChangeCandidateFeeRequest.prototype.getFee = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/** @param {string} value */
proto.ChangeCandidateFeeRequest.prototype.setFee = function(value) {
  jspb.Message.setProto3StringIntField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.UnregisterCandidateRequestV2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.UnregisterCandidateRequestV2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.UnregisterCandidateRequestV2.displayName = 'proto.UnregisterCandidateRequestV2';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.UnregisterCandidateRequestV2.prototype.toObject = function(opt_includeInstance) {
  return proto.UnregisterCandidateRequestV2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.UnregisterCandidateRequestV2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.UnregisterCandidateRequestV2.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.UnregisterCandidateRequestV2}
 */
proto.UnregisterCandidateRequestV2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.UnregisterCandidateRequestV2;
  return proto.UnregisterCandidateRequestV2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.UnregisterCandidateRequestV2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.UnregisterCandidateRequestV2}
 */
proto.UnregisterCandidateRequestV2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.UnregisterCandidateRequestV2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.UnregisterCandidateRequestV2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.UnregisterCandidateRequestV2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.UnregisterCandidateRequestV2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ElectDelegationRequestV2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ElectDelegationRequestV2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ElectDelegationRequestV2.displayName = 'proto.ElectDelegationRequestV2';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ElectDelegationRequestV2.prototype.toObject = function(opt_includeInstance) {
  return proto.ElectDelegationRequestV2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ElectDelegationRequestV2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ElectDelegationRequestV2.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ElectDelegationRequestV2}
 */
proto.ElectDelegationRequestV2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ElectDelegationRequestV2;
  return proto.ElectDelegationRequestV2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ElectDelegationRequestV2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ElectDelegationRequestV2}
 */
proto.ElectDelegationRequestV2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ElectDelegationRequestV2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ElectDelegationRequestV2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ElectDelegationRequestV2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ElectDelegationRequestV2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ListValidatorsRequestV2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ListValidatorsRequestV2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ListValidatorsRequestV2.displayName = 'proto.ListValidatorsRequestV2';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ListValidatorsRequestV2.prototype.toObject = function(opt_includeInstance) {
  return proto.ListValidatorsRequestV2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ListValidatorsRequestV2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ListValidatorsRequestV2.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ListValidatorsRequestV2}
 */
proto.ListValidatorsRequestV2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ListValidatorsRequestV2;
  return proto.ListValidatorsRequestV2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ListValidatorsRequestV2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ListValidatorsRequestV2}
 */
proto.ListValidatorsRequestV2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ListValidatorsRequestV2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ListValidatorsRequestV2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ListValidatorsRequestV2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ListValidatorsRequestV2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ListValidatorsResponseV2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ListValidatorsResponseV2.repeatedFields_, null);
};
goog.inherits(proto.ListValidatorsResponseV2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ListValidatorsResponseV2.displayName = 'proto.ListValidatorsResponseV2';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ListValidatorsResponseV2.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ListValidatorsResponseV2.prototype.toObject = function(opt_includeInstance) {
  return proto.ListValidatorsResponseV2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ListValidatorsResponseV2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ListValidatorsResponseV2.toObject = function(includeInstance, msg) {
  var f, obj = {
    statisticsList: jspb.Message.toObjectList(msg.getStatisticsList(),
    proto.ValidatorStatisticV2.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ListValidatorsResponseV2}
 */
proto.ListValidatorsResponseV2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ListValidatorsResponseV2;
  return proto.ListValidatorsResponseV2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ListValidatorsResponseV2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ListValidatorsResponseV2}
 */
proto.ListValidatorsResponseV2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ValidatorStatisticV2;
      reader.readMessage(value,proto.ValidatorStatisticV2.deserializeBinaryFromReader);
      msg.addStatistics(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ListValidatorsResponseV2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ListValidatorsResponseV2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ListValidatorsResponseV2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ListValidatorsResponseV2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatisticsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ValidatorStatisticV2.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ValidatorStatisticV2 statistics = 1;
 * @return {!Array.<!proto.ValidatorStatisticV2>}
 */
proto.ListValidatorsResponseV2.prototype.getStatisticsList = function() {
  return /** @type{!Array.<!proto.ValidatorStatisticV2>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ValidatorStatisticV2, 1));
};


/** @param {!Array.<!proto.ValidatorStatisticV2>} value */
proto.ListValidatorsResponseV2.prototype.setStatisticsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ValidatorStatisticV2=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ValidatorStatisticV2}
 */
proto.ListValidatorsResponseV2.prototype.addStatistics = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ValidatorStatisticV2, opt_index);
};


proto.ListValidatorsResponseV2.prototype.clearStatisticsList = function() {
  this.setStatisticsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ListCandidateRequestV2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ListCandidateRequestV2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ListCandidateRequestV2.displayName = 'proto.ListCandidateRequestV2';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ListCandidateRequestV2.prototype.toObject = function(opt_includeInstance) {
  return proto.ListCandidateRequestV2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ListCandidateRequestV2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ListCandidateRequestV2.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ListCandidateRequestV2}
 */
proto.ListCandidateRequestV2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ListCandidateRequestV2;
  return proto.ListCandidateRequestV2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ListCandidateRequestV2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ListCandidateRequestV2}
 */
proto.ListCandidateRequestV2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ListCandidateRequestV2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ListCandidateRequestV2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ListCandidateRequestV2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ListCandidateRequestV2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ListCandidateResponseV2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ListCandidateResponseV2.repeatedFields_, null);
};
goog.inherits(proto.ListCandidateResponseV2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ListCandidateResponseV2.displayName = 'proto.ListCandidateResponseV2';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ListCandidateResponseV2.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ListCandidateResponseV2.prototype.toObject = function(opt_includeInstance) {
  return proto.ListCandidateResponseV2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ListCandidateResponseV2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ListCandidateResponseV2.toObject = function(includeInstance, msg) {
  var f, obj = {
    candidatesList: jspb.Message.toObjectList(msg.getCandidatesList(),
    proto.CandidateV2.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ListCandidateResponseV2}
 */
proto.ListCandidateResponseV2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ListCandidateResponseV2;
  return proto.ListCandidateResponseV2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ListCandidateResponseV2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ListCandidateResponseV2}
 */
proto.ListCandidateResponseV2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.CandidateV2;
      reader.readMessage(value,proto.CandidateV2.deserializeBinaryFromReader);
      msg.addCandidates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ListCandidateResponseV2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ListCandidateResponseV2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ListCandidateResponseV2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ListCandidateResponseV2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCandidatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.CandidateV2.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CandidateV2 candidates = 1;
 * @return {!Array.<!proto.CandidateV2>}
 */
proto.ListCandidateResponseV2.prototype.getCandidatesList = function() {
  return /** @type{!Array.<!proto.CandidateV2>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.CandidateV2, 1));
};


/** @param {!Array.<!proto.CandidateV2>} value */
proto.ListCandidateResponseV2.prototype.setCandidatesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.CandidateV2=} opt_value
 * @param {number=} opt_index
 * @return {!proto.CandidateV2}
 */
proto.ListCandidateResponseV2.prototype.addCandidates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.CandidateV2, opt_index);
};


proto.ListCandidateResponseV2.prototype.clearCandidatesList = function() {
  this.setCandidatesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SetElectionCycleRequestV2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SetElectionCycleRequestV2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.SetElectionCycleRequestV2.displayName = 'proto.SetElectionCycleRequestV2';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SetElectionCycleRequestV2.prototype.toObject = function(opt_includeInstance) {
  return proto.SetElectionCycleRequestV2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SetElectionCycleRequestV2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SetElectionCycleRequestV2.toObject = function(includeInstance, msg) {
  var f, obj = {
    electionCycle: jspb.Message.getFieldWithDefault(msg, 1, "0")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SetElectionCycleRequestV2}
 */
proto.SetElectionCycleRequestV2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SetElectionCycleRequestV2;
  return proto.SetElectionCycleRequestV2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SetElectionCycleRequestV2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SetElectionCycleRequestV2}
 */
proto.SetElectionCycleRequestV2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setElectionCycle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SetElectionCycleRequestV2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SetElectionCycleRequestV2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SetElectionCycleRequestV2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SetElectionCycleRequestV2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getElectionCycle();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      1,
      f
    );
  }
};


/**
 * optional int64 election_cycle = 1;
 * @return {string}
 */
proto.SetElectionCycleRequestV2.prototype.getElectionCycle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/** @param {string} value */
proto.SetElectionCycleRequestV2.prototype.setElectionCycle = function(value) {
  jspb.Message.setProto3StringIntField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SetMaxYearlyRewardRequestV2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SetMaxYearlyRewardRequestV2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.SetMaxYearlyRewardRequestV2.displayName = 'proto.SetMaxYearlyRewardRequestV2';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SetMaxYearlyRewardRequestV2.prototype.toObject = function(opt_includeInstance) {
  return proto.SetMaxYearlyRewardRequestV2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SetMaxYearlyRewardRequestV2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SetMaxYearlyRewardRequestV2.toObject = function(includeInstance, msg) {
  var f, obj = {
    maxYearlyReward: (f = msg.getMaxYearlyReward()) && proto_loom_pb.BigUInt.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SetMaxYearlyRewardRequestV2}
 */
proto.SetMaxYearlyRewardRequestV2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SetMaxYearlyRewardRequestV2;
  return proto.SetMaxYearlyRewardRequestV2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SetMaxYearlyRewardRequestV2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SetMaxYearlyRewardRequestV2}
 */
proto.SetMaxYearlyRewardRequestV2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_loom_pb.BigUInt;
      reader.readMessage(value,proto_loom_pb.BigUInt.deserializeBinaryFromReader);
      msg.setMaxYearlyReward(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SetMaxYearlyRewardRequestV2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SetMaxYearlyRewardRequestV2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SetMaxYearlyRewardRequestV2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SetMaxYearlyRewardRequestV2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMaxYearlyReward();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_loom_pb.BigUInt.serializeBinaryToWriter
    );
  }
};


/**
 * optional BigUInt max_yearly_reward = 1;
 * @return {?proto.BigUInt}
 */
proto.SetMaxYearlyRewardRequestV2.prototype.getMaxYearlyReward = function() {
  return /** @type{?proto.BigUInt} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.BigUInt, 1));
};


/** @param {?proto.BigUInt|undefined} value */
proto.SetMaxYearlyRewardRequestV2.prototype.setMaxYearlyReward = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.SetMaxYearlyRewardRequestV2.prototype.clearMaxYearlyReward = function() {
  this.setMaxYearlyReward(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.SetMaxYearlyRewardRequestV2.prototype.hasMaxYearlyReward = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SetRegistrationRequirementRequestV2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SetRegistrationRequirementRequestV2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.SetRegistrationRequirementRequestV2.displayName = 'proto.SetRegistrationRequirementRequestV2';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SetRegistrationRequirementRequestV2.prototype.toObject = function(opt_includeInstance) {
  return proto.SetRegistrationRequirementRequestV2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SetRegistrationRequirementRequestV2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SetRegistrationRequirementRequestV2.toObject = function(includeInstance, msg) {
  var f, obj = {
    registrationRequirement: (f = msg.getRegistrationRequirement()) && proto_loom_pb.BigUInt.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SetRegistrationRequirementRequestV2}
 */
proto.SetRegistrationRequirementRequestV2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SetRegistrationRequirementRequestV2;
  return proto.SetRegistrationRequirementRequestV2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SetRegistrationRequirementRequestV2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SetRegistrationRequirementRequestV2}
 */
proto.SetRegistrationRequirementRequestV2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_loom_pb.BigUInt;
      reader.readMessage(value,proto_loom_pb.BigUInt.deserializeBinaryFromReader);
      msg.setRegistrationRequirement(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SetRegistrationRequirementRequestV2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SetRegistrationRequirementRequestV2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SetRegistrationRequirementRequestV2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SetRegistrationRequirementRequestV2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRegistrationRequirement();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_loom_pb.BigUInt.serializeBinaryToWriter
    );
  }
};


/**
 * optional BigUInt registration_requirement = 1;
 * @return {?proto.BigUInt}
 */
proto.SetRegistrationRequirementRequestV2.prototype.getRegistrationRequirement = function() {
  return /** @type{?proto.BigUInt} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.BigUInt, 1));
};


/** @param {?proto.BigUInt|undefined} value */
proto.SetRegistrationRequirementRequestV2.prototype.setRegistrationRequirement = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.SetRegistrationRequirementRequestV2.prototype.clearRegistrationRequirement = function() {
  this.setRegistrationRequirement(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.SetRegistrationRequirementRequestV2.prototype.hasRegistrationRequirement = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SetValidatorCountRequestV2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SetValidatorCountRequestV2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.SetValidatorCountRequestV2.displayName = 'proto.SetValidatorCountRequestV2';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SetValidatorCountRequestV2.prototype.toObject = function(opt_includeInstance) {
  return proto.SetValidatorCountRequestV2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SetValidatorCountRequestV2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SetValidatorCountRequestV2.toObject = function(includeInstance, msg) {
  var f, obj = {
    validatorCount: jspb.Message.getFieldWithDefault(msg, 1, "0")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SetValidatorCountRequestV2}
 */
proto.SetValidatorCountRequestV2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SetValidatorCountRequestV2;
  return proto.SetValidatorCountRequestV2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SetValidatorCountRequestV2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SetValidatorCountRequestV2}
 */
proto.SetValidatorCountRequestV2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setValidatorCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SetValidatorCountRequestV2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SetValidatorCountRequestV2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SetValidatorCountRequestV2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SetValidatorCountRequestV2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValidatorCount();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      1,
      f
    );
  }
};


/**
 * optional int64 validator_count = 1;
 * @return {string}
 */
proto.SetValidatorCountRequestV2.prototype.getValidatorCount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/** @param {string} value */
proto.SetValidatorCountRequestV2.prototype.setValidatorCount = function(value) {
  jspb.Message.setProto3StringIntField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SetOracleAddressRequestV2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SetOracleAddressRequestV2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.SetOracleAddressRequestV2.displayName = 'proto.SetOracleAddressRequestV2';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SetOracleAddressRequestV2.prototype.toObject = function(opt_includeInstance) {
  return proto.SetOracleAddressRequestV2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SetOracleAddressRequestV2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SetOracleAddressRequestV2.toObject = function(includeInstance, msg) {
  var f, obj = {
    oracleAddress: (f = msg.getOracleAddress()) && proto_loom_pb.Address.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SetOracleAddressRequestV2}
 */
proto.SetOracleAddressRequestV2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SetOracleAddressRequestV2;
  return proto.SetOracleAddressRequestV2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SetOracleAddressRequestV2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SetOracleAddressRequestV2}
 */
proto.SetOracleAddressRequestV2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_loom_pb.Address;
      reader.readMessage(value,proto_loom_pb.Address.deserializeBinaryFromReader);
      msg.setOracleAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SetOracleAddressRequestV2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SetOracleAddressRequestV2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SetOracleAddressRequestV2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SetOracleAddressRequestV2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOracleAddress();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_loom_pb.Address.serializeBinaryToWriter
    );
  }
};


/**
 * optional Address oracle_address = 1;
 * @return {?proto.Address}
 */
proto.SetOracleAddressRequestV2.prototype.getOracleAddress = function() {
  return /** @type{?proto.Address} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.Address, 1));
};


/** @param {?proto.Address|undefined} value */
proto.SetOracleAddressRequestV2.prototype.setOracleAddress = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.SetOracleAddressRequestV2.prototype.clearOracleAddress = function() {
  this.setOracleAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.SetOracleAddressRequestV2.prototype.hasOracleAddress = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SetSlashingPercentagesRequestV2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SetSlashingPercentagesRequestV2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.SetSlashingPercentagesRequestV2.displayName = 'proto.SetSlashingPercentagesRequestV2';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SetSlashingPercentagesRequestV2.prototype.toObject = function(opt_includeInstance) {
  return proto.SetSlashingPercentagesRequestV2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SetSlashingPercentagesRequestV2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SetSlashingPercentagesRequestV2.toObject = function(includeInstance, msg) {
  var f, obj = {
    crashSlashingPercentage: (f = msg.getCrashSlashingPercentage()) && proto_loom_pb.BigUInt.toObject(includeInstance, f),
    byzantineSlashingPercentage: (f = msg.getByzantineSlashingPercentage()) && proto_loom_pb.BigUInt.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SetSlashingPercentagesRequestV2}
 */
proto.SetSlashingPercentagesRequestV2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SetSlashingPercentagesRequestV2;
  return proto.SetSlashingPercentagesRequestV2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SetSlashingPercentagesRequestV2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SetSlashingPercentagesRequestV2}
 */
proto.SetSlashingPercentagesRequestV2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_loom_pb.BigUInt;
      reader.readMessage(value,proto_loom_pb.BigUInt.deserializeBinaryFromReader);
      msg.setCrashSlashingPercentage(value);
      break;
    case 2:
      var value = new proto_loom_pb.BigUInt;
      reader.readMessage(value,proto_loom_pb.BigUInt.deserializeBinaryFromReader);
      msg.setByzantineSlashingPercentage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SetSlashingPercentagesRequestV2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SetSlashingPercentagesRequestV2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SetSlashingPercentagesRequestV2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SetSlashingPercentagesRequestV2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCrashSlashingPercentage();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_loom_pb.BigUInt.serializeBinaryToWriter
    );
  }
  f = message.getByzantineSlashingPercentage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto_loom_pb.BigUInt.serializeBinaryToWriter
    );
  }
};


/**
 * optional BigUInt crash_slashing_percentage = 1;
 * @return {?proto.BigUInt}
 */
proto.SetSlashingPercentagesRequestV2.prototype.getCrashSlashingPercentage = function() {
  return /** @type{?proto.BigUInt} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.BigUInt, 1));
};


/** @param {?proto.BigUInt|undefined} value */
proto.SetSlashingPercentagesRequestV2.prototype.setCrashSlashingPercentage = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.SetSlashingPercentagesRequestV2.prototype.clearCrashSlashingPercentage = function() {
  this.setCrashSlashingPercentage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.SetSlashingPercentagesRequestV2.prototype.hasCrashSlashingPercentage = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional BigUInt byzantine_slashing_percentage = 2;
 * @return {?proto.BigUInt}
 */
proto.SetSlashingPercentagesRequestV2.prototype.getByzantineSlashingPercentage = function() {
  return /** @type{?proto.BigUInt} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.BigUInt, 2));
};


/** @param {?proto.BigUInt|undefined} value */
proto.SetSlashingPercentagesRequestV2.prototype.setByzantineSlashingPercentage = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.SetSlashingPercentagesRequestV2.prototype.clearByzantineSlashingPercentage = function() {
  this.setByzantineSlashingPercentage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.SetSlashingPercentagesRequestV2.prototype.hasByzantineSlashingPercentage = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.TotalDelegationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.TotalDelegationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.TotalDelegationRequest.displayName = 'proto.TotalDelegationRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.TotalDelegationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.TotalDelegationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.TotalDelegationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TotalDelegationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    delegatorAddress: (f = msg.getDelegatorAddress()) && proto_loom_pb.Address.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.TotalDelegationRequest}
 */
proto.TotalDelegationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.TotalDelegationRequest;
  return proto.TotalDelegationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.TotalDelegationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.TotalDelegationRequest}
 */
proto.TotalDelegationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_loom_pb.Address;
      reader.readMessage(value,proto_loom_pb.Address.deserializeBinaryFromReader);
      msg.setDelegatorAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.TotalDelegationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.TotalDelegationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.TotalDelegationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TotalDelegationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDelegatorAddress();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_loom_pb.Address.serializeBinaryToWriter
    );
  }
};


/**
 * optional Address delegator_address = 1;
 * @return {?proto.Address}
 */
proto.TotalDelegationRequest.prototype.getDelegatorAddress = function() {
  return /** @type{?proto.Address} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.Address, 1));
};


/** @param {?proto.Address|undefined} value */
proto.TotalDelegationRequest.prototype.setDelegatorAddress = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.TotalDelegationRequest.prototype.clearDelegatorAddress = function() {
  this.setDelegatorAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.TotalDelegationRequest.prototype.hasDelegatorAddress = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.TotalDelegationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.TotalDelegationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.TotalDelegationResponse.displayName = 'proto.TotalDelegationResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.TotalDelegationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.TotalDelegationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.TotalDelegationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TotalDelegationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    amount: (f = msg.getAmount()) && proto_loom_pb.BigUInt.toObject(includeInstance, f),
    weightedAmount: (f = msg.getWeightedAmount()) && proto_loom_pb.BigUInt.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.TotalDelegationResponse}
 */
proto.TotalDelegationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.TotalDelegationResponse;
  return proto.TotalDelegationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.TotalDelegationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.TotalDelegationResponse}
 */
proto.TotalDelegationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_loom_pb.BigUInt;
      reader.readMessage(value,proto_loom_pb.BigUInt.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    case 2:
      var value = new proto_loom_pb.BigUInt;
      reader.readMessage(value,proto_loom_pb.BigUInt.deserializeBinaryFromReader);
      msg.setWeightedAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.TotalDelegationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.TotalDelegationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.TotalDelegationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TotalDelegationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_loom_pb.BigUInt.serializeBinaryToWriter
    );
  }
  f = message.getWeightedAmount();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto_loom_pb.BigUInt.serializeBinaryToWriter
    );
  }
};


/**
 * optional BigUInt amount = 1;
 * @return {?proto.BigUInt}
 */
proto.TotalDelegationResponse.prototype.getAmount = function() {
  return /** @type{?proto.BigUInt} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.BigUInt, 1));
};


/** @param {?proto.BigUInt|undefined} value */
proto.TotalDelegationResponse.prototype.setAmount = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.TotalDelegationResponse.prototype.clearAmount = function() {
  this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.TotalDelegationResponse.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional BigUInt weighted_amount = 2;
 * @return {?proto.BigUInt}
 */
proto.TotalDelegationResponse.prototype.getWeightedAmount = function() {
  return /** @type{?proto.BigUInt} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.BigUInt, 2));
};


/** @param {?proto.BigUInt|undefined} value */
proto.TotalDelegationResponse.prototype.setWeightedAmount = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.TotalDelegationResponse.prototype.clearWeightedAmount = function() {
  this.setWeightedAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.TotalDelegationResponse.prototype.hasWeightedAmount = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CheckDistributionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CheckDistributionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CheckDistributionRequest.displayName = 'proto.CheckDistributionRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CheckDistributionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CheckDistributionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CheckDistributionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CheckDistributionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CheckDistributionRequest}
 */
proto.CheckDistributionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CheckDistributionRequest;
  return proto.CheckDistributionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CheckDistributionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CheckDistributionRequest}
 */
proto.CheckDistributionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CheckDistributionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CheckDistributionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CheckDistributionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CheckDistributionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CheckDistributionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CheckDistributionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CheckDistributionResponse.displayName = 'proto.CheckDistributionResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CheckDistributionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CheckDistributionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CheckDistributionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CheckDistributionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    amount: (f = msg.getAmount()) && proto_loom_pb.BigUInt.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CheckDistributionResponse}
 */
proto.CheckDistributionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CheckDistributionResponse;
  return proto.CheckDistributionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CheckDistributionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CheckDistributionResponse}
 */
proto.CheckDistributionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_loom_pb.BigUInt;
      reader.readMessage(value,proto_loom_pb.BigUInt.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CheckDistributionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CheckDistributionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CheckDistributionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CheckDistributionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_loom_pb.BigUInt.serializeBinaryToWriter
    );
  }
};


/**
 * optional BigUInt amount = 1;
 * @return {?proto.BigUInt}
 */
proto.CheckDistributionResponse.prototype.getAmount = function() {
  return /** @type{?proto.BigUInt} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.BigUInt, 1));
};


/** @param {?proto.BigUInt|undefined} value */
proto.CheckDistributionResponse.prototype.setAmount = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.CheckDistributionResponse.prototype.clearAmount = function() {
  this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CheckDistributionResponse.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.TimeUntilElectionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.TimeUntilElectionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.TimeUntilElectionRequest.displayName = 'proto.TimeUntilElectionRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.TimeUntilElectionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.TimeUntilElectionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.TimeUntilElectionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TimeUntilElectionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.TimeUntilElectionRequest}
 */
proto.TimeUntilElectionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.TimeUntilElectionRequest;
  return proto.TimeUntilElectionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.TimeUntilElectionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.TimeUntilElectionRequest}
 */
proto.TimeUntilElectionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.TimeUntilElectionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.TimeUntilElectionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.TimeUntilElectionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TimeUntilElectionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.TimeUntilElectionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.TimeUntilElectionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.TimeUntilElectionResponse.displayName = 'proto.TimeUntilElectionResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.TimeUntilElectionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.TimeUntilElectionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.TimeUntilElectionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TimeUntilElectionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    timeUntilElection: jspb.Message.getFieldWithDefault(msg, 1, "0")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.TimeUntilElectionResponse}
 */
proto.TimeUntilElectionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.TimeUntilElectionResponse;
  return proto.TimeUntilElectionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.TimeUntilElectionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.TimeUntilElectionResponse}
 */
proto.TimeUntilElectionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setTimeUntilElection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.TimeUntilElectionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.TimeUntilElectionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.TimeUntilElectionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TimeUntilElectionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimeUntilElection();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      1,
      f
    );
  }
};


/**
 * optional int64 time_until_election = 1;
 * @return {string}
 */
proto.TimeUntilElectionResponse.prototype.getTimeUntilElection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/** @param {string} value */
proto.TimeUntilElectionResponse.prototype.setTimeUntilElection = function(value) {
  jspb.Message.setProto3StringIntField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ListDelegationsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ListDelegationsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ListDelegationsRequest.displayName = 'proto.ListDelegationsRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ListDelegationsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ListDelegationsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ListDelegationsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ListDelegationsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    candidate: (f = msg.getCandidate()) && proto_loom_pb.Address.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ListDelegationsRequest}
 */
proto.ListDelegationsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ListDelegationsRequest;
  return proto.ListDelegationsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ListDelegationsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ListDelegationsRequest}
 */
proto.ListDelegationsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_loom_pb.Address;
      reader.readMessage(value,proto_loom_pb.Address.deserializeBinaryFromReader);
      msg.setCandidate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ListDelegationsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ListDelegationsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ListDelegationsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ListDelegationsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCandidate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_loom_pb.Address.serializeBinaryToWriter
    );
  }
};


/**
 * optional Address candidate = 1;
 * @return {?proto.Address}
 */
proto.ListDelegationsRequest.prototype.getCandidate = function() {
  return /** @type{?proto.Address} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.Address, 1));
};


/** @param {?proto.Address|undefined} value */
proto.ListDelegationsRequest.prototype.setCandidate = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.ListDelegationsRequest.prototype.clearCandidate = function() {
  this.setCandidate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ListDelegationsRequest.prototype.hasCandidate = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ListDelegationsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ListDelegationsResponse.repeatedFields_, null);
};
goog.inherits(proto.ListDelegationsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ListDelegationsResponse.displayName = 'proto.ListDelegationsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ListDelegationsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ListDelegationsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ListDelegationsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ListDelegationsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ListDelegationsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    delegationsList: jspb.Message.toObjectList(msg.getDelegationsList(),
    proto.DelegationV2.toObject, includeInstance),
    delegationTotal: (f = msg.getDelegationTotal()) && proto_loom_pb.BigUInt.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ListDelegationsResponse}
 */
proto.ListDelegationsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ListDelegationsResponse;
  return proto.ListDelegationsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ListDelegationsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ListDelegationsResponse}
 */
proto.ListDelegationsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.DelegationV2;
      reader.readMessage(value,proto.DelegationV2.deserializeBinaryFromReader);
      msg.addDelegations(value);
      break;
    case 2:
      var value = new proto_loom_pb.BigUInt;
      reader.readMessage(value,proto_loom_pb.BigUInt.deserializeBinaryFromReader);
      msg.setDelegationTotal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ListDelegationsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ListDelegationsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ListDelegationsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ListDelegationsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDelegationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.DelegationV2.serializeBinaryToWriter
    );
  }
  f = message.getDelegationTotal();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto_loom_pb.BigUInt.serializeBinaryToWriter
    );
  }
};


/**
 * repeated DelegationV2 delegations = 1;
 * @return {!Array.<!proto.DelegationV2>}
 */
proto.ListDelegationsResponse.prototype.getDelegationsList = function() {
  return /** @type{!Array.<!proto.DelegationV2>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.DelegationV2, 1));
};


/** @param {!Array.<!proto.DelegationV2>} value */
proto.ListDelegationsResponse.prototype.setDelegationsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.DelegationV2=} opt_value
 * @param {number=} opt_index
 * @return {!proto.DelegationV2}
 */
proto.ListDelegationsResponse.prototype.addDelegations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.DelegationV2, opt_index);
};


proto.ListDelegationsResponse.prototype.clearDelegationsList = function() {
  this.setDelegationsList([]);
};


/**
 * optional BigUInt delegation_total = 2;
 * @return {?proto.BigUInt}
 */
proto.ListDelegationsResponse.prototype.getDelegationTotal = function() {
  return /** @type{?proto.BigUInt} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.BigUInt, 2));
};


/** @param {?proto.BigUInt|undefined} value */
proto.ListDelegationsResponse.prototype.setDelegationTotal = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.ListDelegationsResponse.prototype.clearDelegationTotal = function() {
  this.setDelegationTotal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ListDelegationsResponse.prototype.hasDelegationTotal = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ListAllDelegationsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ListAllDelegationsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ListAllDelegationsRequest.displayName = 'proto.ListAllDelegationsRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ListAllDelegationsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ListAllDelegationsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ListAllDelegationsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ListAllDelegationsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ListAllDelegationsRequest}
 */
proto.ListAllDelegationsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ListAllDelegationsRequest;
  return proto.ListAllDelegationsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ListAllDelegationsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ListAllDelegationsRequest}
 */
proto.ListAllDelegationsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ListAllDelegationsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ListAllDelegationsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ListAllDelegationsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ListAllDelegationsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ListAllDelegationsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ListAllDelegationsResponse.repeatedFields_, null);
};
goog.inherits(proto.ListAllDelegationsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ListAllDelegationsResponse.displayName = 'proto.ListAllDelegationsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ListAllDelegationsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ListAllDelegationsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ListAllDelegationsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ListAllDelegationsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ListAllDelegationsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    listresponsesList: jspb.Message.toObjectList(msg.getListresponsesList(),
    proto.ListDelegationsResponse.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ListAllDelegationsResponse}
 */
proto.ListAllDelegationsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ListAllDelegationsResponse;
  return proto.ListAllDelegationsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ListAllDelegationsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ListAllDelegationsResponse}
 */
proto.ListAllDelegationsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ListDelegationsResponse;
      reader.readMessage(value,proto.ListDelegationsResponse.deserializeBinaryFromReader);
      msg.addListresponses(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ListAllDelegationsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ListAllDelegationsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ListAllDelegationsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ListAllDelegationsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListresponsesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ListDelegationsResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ListDelegationsResponse listResponses = 1;
 * @return {!Array.<!proto.ListDelegationsResponse>}
 */
proto.ListAllDelegationsResponse.prototype.getListresponsesList = function() {
  return /** @type{!Array.<!proto.ListDelegationsResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ListDelegationsResponse, 1));
};


/** @param {!Array.<!proto.ListDelegationsResponse>} value */
proto.ListAllDelegationsResponse.prototype.setListresponsesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ListDelegationsResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ListDelegationsResponse}
 */
proto.ListAllDelegationsResponse.prototype.addListresponses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ListDelegationsResponse, opt_index);
};


proto.ListAllDelegationsResponse.prototype.clearListresponsesList = function() {
  this.setListresponsesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CheckAllDelegationsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CheckAllDelegationsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CheckAllDelegationsRequest.displayName = 'proto.CheckAllDelegationsRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CheckAllDelegationsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CheckAllDelegationsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CheckAllDelegationsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CheckAllDelegationsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    delegatorAddress: (f = msg.getDelegatorAddress()) && proto_loom_pb.Address.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CheckAllDelegationsRequest}
 */
proto.CheckAllDelegationsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CheckAllDelegationsRequest;
  return proto.CheckAllDelegationsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CheckAllDelegationsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CheckAllDelegationsRequest}
 */
proto.CheckAllDelegationsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_loom_pb.Address;
      reader.readMessage(value,proto_loom_pb.Address.deserializeBinaryFromReader);
      msg.setDelegatorAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CheckAllDelegationsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CheckAllDelegationsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CheckAllDelegationsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CheckAllDelegationsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDelegatorAddress();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_loom_pb.Address.serializeBinaryToWriter
    );
  }
};


/**
 * optional Address delegator_address = 1;
 * @return {?proto.Address}
 */
proto.CheckAllDelegationsRequest.prototype.getDelegatorAddress = function() {
  return /** @type{?proto.Address} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.Address, 1));
};


/** @param {?proto.Address|undefined} value */
proto.CheckAllDelegationsRequest.prototype.setDelegatorAddress = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.CheckAllDelegationsRequest.prototype.clearDelegatorAddress = function() {
  this.setDelegatorAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CheckAllDelegationsRequest.prototype.hasDelegatorAddress = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CheckAllDelegationsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.CheckAllDelegationsResponse.repeatedFields_, null);
};
goog.inherits(proto.CheckAllDelegationsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.CheckAllDelegationsResponse.displayName = 'proto.CheckAllDelegationsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.CheckAllDelegationsResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CheckAllDelegationsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CheckAllDelegationsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CheckAllDelegationsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CheckAllDelegationsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    amount: (f = msg.getAmount()) && proto_loom_pb.BigUInt.toObject(includeInstance, f),
    weightedAmount: (f = msg.getWeightedAmount()) && proto_loom_pb.BigUInt.toObject(includeInstance, f),
    delegationsList: jspb.Message.toObjectList(msg.getDelegationsList(),
    proto.DelegationV2.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CheckAllDelegationsResponse}
 */
proto.CheckAllDelegationsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CheckAllDelegationsResponse;
  return proto.CheckAllDelegationsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CheckAllDelegationsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CheckAllDelegationsResponse}
 */
proto.CheckAllDelegationsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_loom_pb.BigUInt;
      reader.readMessage(value,proto_loom_pb.BigUInt.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    case 2:
      var value = new proto_loom_pb.BigUInt;
      reader.readMessage(value,proto_loom_pb.BigUInt.deserializeBinaryFromReader);
      msg.setWeightedAmount(value);
      break;
    case 3:
      var value = new proto.DelegationV2;
      reader.readMessage(value,proto.DelegationV2.deserializeBinaryFromReader);
      msg.addDelegations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CheckAllDelegationsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CheckAllDelegationsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CheckAllDelegationsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CheckAllDelegationsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_loom_pb.BigUInt.serializeBinaryToWriter
    );
  }
  f = message.getWeightedAmount();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto_loom_pb.BigUInt.serializeBinaryToWriter
    );
  }
  f = message.getDelegationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.DelegationV2.serializeBinaryToWriter
    );
  }
};


/**
 * optional BigUInt amount = 1;
 * @return {?proto.BigUInt}
 */
proto.CheckAllDelegationsResponse.prototype.getAmount = function() {
  return /** @type{?proto.BigUInt} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.BigUInt, 1));
};


/** @param {?proto.BigUInt|undefined} value */
proto.CheckAllDelegationsResponse.prototype.setAmount = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.CheckAllDelegationsResponse.prototype.clearAmount = function() {
  this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CheckAllDelegationsResponse.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional BigUInt weighted_amount = 2;
 * @return {?proto.BigUInt}
 */
proto.CheckAllDelegationsResponse.prototype.getWeightedAmount = function() {
  return /** @type{?proto.BigUInt} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.BigUInt, 2));
};


/** @param {?proto.BigUInt|undefined} value */
proto.CheckAllDelegationsResponse.prototype.setWeightedAmount = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.CheckAllDelegationsResponse.prototype.clearWeightedAmount = function() {
  this.setWeightedAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.CheckAllDelegationsResponse.prototype.hasWeightedAmount = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated DelegationV2 delegations = 3;
 * @return {!Array.<!proto.DelegationV2>}
 */
proto.CheckAllDelegationsResponse.prototype.getDelegationsList = function() {
  return /** @type{!Array.<!proto.DelegationV2>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.DelegationV2, 3));
};


/** @param {!Array.<!proto.DelegationV2>} value */
proto.CheckAllDelegationsResponse.prototype.setDelegationsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.DelegationV2=} opt_value
 * @param {number=} opt_index
 * @return {!proto.DelegationV2}
 */
proto.CheckAllDelegationsResponse.prototype.addDelegations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.DelegationV2, opt_index);
};


proto.CheckAllDelegationsResponse.prototype.clearDelegationsList = function() {
  this.setDelegationsList([]);
};


goog.object.extend(exports, proto);
