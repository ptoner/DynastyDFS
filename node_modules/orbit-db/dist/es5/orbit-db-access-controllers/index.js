'use strict';

var IPFSAccessController = require('./ipfs-access-controller');
var OrbitDBAccessController = require('./orbitdb-access-controller');

var create = async function create(type, databaseAddress, orbitdb, ipfs) {
  switch (type) {
    case 'ipfs':
      return new IPFSAccessController(ipfs);
      break;
    case 'orbitdb':
      var accessController = new OrbitDBAccessController(orbitdb);
      if (databaseAddress) await accessController.load(databaseAddress);
      return accessController;
      break;
    default:
      throw new Error('Unsupported access controller type \'' + type + '\'');
  }
};

module.exports = {
  create: create,
  load: async function load(address, orbitdb, ipfs) {
    var type = address.toString().split('/')[1];
    var accessController = await create(type, null, orbitdb, ipfs);
    await accessController.load(address);
    return accessController;
  }
};